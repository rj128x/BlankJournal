//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34209
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace MainSL.MainSVC {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsersTable", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal")]
    public partial class UsersTable : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.BPJournalTable> BPJournalTableField;
        
        private bool IsNOSField;
        
        private bool IsNSSField;
        
        private string LoginField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPCommentsTable> TBPCommentsTableField;
        
        private System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPCommentsTable> TBPCommentsTable1Field;
        
        private System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPHistoryTable> TBPHistoryTableField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.BPJournalTable> BPJournalTable {
            get {
                return this.BPJournalTableField;
            }
            set {
                if ((object.ReferenceEquals(this.BPJournalTableField, value) != true)) {
                    this.BPJournalTableField = value;
                    this.RaisePropertyChanged("BPJournalTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNOS {
            get {
                return this.IsNOSField;
            }
            set {
                if ((this.IsNOSField.Equals(value) != true)) {
                    this.IsNOSField = value;
                    this.RaisePropertyChanged("IsNOS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNSS {
            get {
                return this.IsNSSField;
            }
            set {
                if ((this.IsNSSField.Equals(value) != true)) {
                    this.IsNSSField = value;
                    this.RaisePropertyChanged("IsNSS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPCommentsTable> TBPCommentsTable {
            get {
                return this.TBPCommentsTableField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPCommentsTableField, value) != true)) {
                    this.TBPCommentsTableField = value;
                    this.RaisePropertyChanged("TBPCommentsTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPCommentsTable> TBPCommentsTable1 {
            get {
                return this.TBPCommentsTable1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TBPCommentsTable1Field, value) != true)) {
                    this.TBPCommentsTable1Field = value;
                    this.RaisePropertyChanged("TBPCommentsTable1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPHistoryTable> TBPHistoryTable {
            get {
                return this.TBPHistoryTableField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPHistoryTableField, value) != true)) {
                    this.TBPHistoryTableField = value;
                    this.RaisePropertyChanged("TBPHistoryTable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BPJournalTable", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal")]
    public partial class BPJournalTable : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthorField;
        
        private string CommentField;
        
        private System.DateTime DateCreateField;
        
        private System.DateTime DateEndField;
        
        private System.DateTime DateStartField;
        
        private int IdField;
        
        private string NameField;
        
        private double NumberField;
        
        private byte[] PDFDataField;
        
        private MainSL.MainSVC.TBPInfoTable TBPInfoTableField;
        
        private string TBPNumberField;
        
        private MainSL.MainSVC.UsersTable UsersTableField;
        
        private byte[] WordDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreate {
            get {
                return this.DateCreateField;
            }
            set {
                if ((this.DateCreateField.Equals(value) != true)) {
                    this.DateCreateField = value;
                    this.RaisePropertyChanged("DateCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateEnd {
            get {
                return this.DateEndField;
            }
            set {
                if ((this.DateEndField.Equals(value) != true)) {
                    this.DateEndField = value;
                    this.RaisePropertyChanged("DateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateStart {
            get {
                return this.DateStartField;
            }
            set {
                if ((this.DateStartField.Equals(value) != true)) {
                    this.DateStartField = value;
                    this.RaisePropertyChanged("DateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PDFData {
            get {
                return this.PDFDataField;
            }
            set {
                if ((object.ReferenceEquals(this.PDFDataField, value) != true)) {
                    this.PDFDataField = value;
                    this.RaisePropertyChanged("PDFData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MainSL.MainSVC.TBPInfoTable TBPInfoTable {
            get {
                return this.TBPInfoTableField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPInfoTableField, value) != true)) {
                    this.TBPInfoTableField = value;
                    this.RaisePropertyChanged("TBPInfoTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TBPNumber {
            get {
                return this.TBPNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPNumberField, value) != true)) {
                    this.TBPNumberField = value;
                    this.RaisePropertyChanged("TBPNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MainSL.MainSVC.UsersTable UsersTable {
            get {
                return this.UsersTableField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersTableField, value) != true)) {
                    this.UsersTableField = value;
                    this.RaisePropertyChanged("UsersTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] WordData {
            get {
                return this.WordDataField;
            }
            set {
                if ((object.ReferenceEquals(this.WordDataField, value) != true)) {
                    this.WordDataField = value;
                    this.RaisePropertyChanged("WordData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBPCommentsTable", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal")]
    public partial class TBPCommentsTable : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthorField;
        
        private string CommentField;
        
        private string CommentPerformField;
        
        private int IdField;
        
        private string PerformerField;
        
        private MainSL.MainSVC.TBPInfoTable TBPInfoTableField;
        
        private string TBPNumberField;
        
        private MainSL.MainSVC.UsersTable UsersTableField;
        
        private MainSL.MainSVC.UsersTable UsersTable1Field;
        
        private byte[] WordDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentPerform {
            get {
                return this.CommentPerformField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentPerformField, value) != true)) {
                    this.CommentPerformField = value;
                    this.RaisePropertyChanged("CommentPerform");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Performer {
            get {
                return this.PerformerField;
            }
            set {
                if ((object.ReferenceEquals(this.PerformerField, value) != true)) {
                    this.PerformerField = value;
                    this.RaisePropertyChanged("Performer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MainSL.MainSVC.TBPInfoTable TBPInfoTable {
            get {
                return this.TBPInfoTableField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPInfoTableField, value) != true)) {
                    this.TBPInfoTableField = value;
                    this.RaisePropertyChanged("TBPInfoTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TBPNumber {
            get {
                return this.TBPNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPNumberField, value) != true)) {
                    this.TBPNumberField = value;
                    this.RaisePropertyChanged("TBPNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MainSL.MainSVC.UsersTable UsersTable {
            get {
                return this.UsersTableField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersTableField, value) != true)) {
                    this.UsersTableField = value;
                    this.RaisePropertyChanged("UsersTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MainSL.MainSVC.UsersTable UsersTable1 {
            get {
                return this.UsersTable1Field;
            }
            set {
                if ((object.ReferenceEquals(this.UsersTable1Field, value) != true)) {
                    this.UsersTable1Field = value;
                    this.RaisePropertyChanged("UsersTable1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] WordData {
            get {
                return this.WordDataField;
            }
            set {
                if ((object.ReferenceEquals(this.WordDataField, value) != true)) {
                    this.WordDataField = value;
                    this.RaisePropertyChanged("WordData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBPHistoryTable", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal")]
    public partial class TBPHistoryTable : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthorField;
        
        private int IdField;
        
        private byte[] NewPDFDataField;
        
        private byte[] NewWordDataField;
        
        private byte[] PrevPDFDataField;
        
        private byte[] PrevWordDataField;
        
        private MainSL.MainSVC.TBPInfoTable TBPInfoTableField;
        
        private string TBPNumberField;
        
        private MainSL.MainSVC.UsersTable UsersTableField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] NewPDFData {
            get {
                return this.NewPDFDataField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPDFDataField, value) != true)) {
                    this.NewPDFDataField = value;
                    this.RaisePropertyChanged("NewPDFData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] NewWordData {
            get {
                return this.NewWordDataField;
            }
            set {
                if ((object.ReferenceEquals(this.NewWordDataField, value) != true)) {
                    this.NewWordDataField = value;
                    this.RaisePropertyChanged("NewWordData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PrevPDFData {
            get {
                return this.PrevPDFDataField;
            }
            set {
                if ((object.ReferenceEquals(this.PrevPDFDataField, value) != true)) {
                    this.PrevPDFDataField = value;
                    this.RaisePropertyChanged("PrevPDFData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PrevWordData {
            get {
                return this.PrevWordDataField;
            }
            set {
                if ((object.ReferenceEquals(this.PrevWordDataField, value) != true)) {
                    this.PrevWordDataField = value;
                    this.RaisePropertyChanged("PrevWordData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MainSL.MainSVC.TBPInfoTable TBPInfoTable {
            get {
                return this.TBPInfoTableField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPInfoTableField, value) != true)) {
                    this.TBPInfoTableField = value;
                    this.RaisePropertyChanged("TBPInfoTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TBPNumber {
            get {
                return this.TBPNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPNumberField, value) != true)) {
                    this.TBPNumberField = value;
                    this.RaisePropertyChanged("TBPNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MainSL.MainSVC.UsersTable UsersTable {
            get {
                return this.UsersTableField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersTableField, value) != true)) {
                    this.UsersTableField = value;
                    this.RaisePropertyChanged("UsersTable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBPInfoTable", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal")]
    public partial class TBPInfoTable : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.BPJournalTable> BPJournalTableField;
        
        private byte[] DataPDFField;
        
        private byte[] DataWordField;
        
        private int FolderField;
        
        private MainSL.MainSVC.FoldersTable FoldersTableField;
        
        private string NameField;
        
        private string NumberField;
        
        private System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPCommentsTable> TBPCommentsTableField;
        
        private System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPHistoryTable> TBPHistoryTableField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.BPJournalTable> BPJournalTable {
            get {
                return this.BPJournalTableField;
            }
            set {
                if ((object.ReferenceEquals(this.BPJournalTableField, value) != true)) {
                    this.BPJournalTableField = value;
                    this.RaisePropertyChanged("BPJournalTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DataPDF {
            get {
                return this.DataPDFField;
            }
            set {
                if ((object.ReferenceEquals(this.DataPDFField, value) != true)) {
                    this.DataPDFField = value;
                    this.RaisePropertyChanged("DataPDF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DataWord {
            get {
                return this.DataWordField;
            }
            set {
                if ((object.ReferenceEquals(this.DataWordField, value) != true)) {
                    this.DataWordField = value;
                    this.RaisePropertyChanged("DataWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Folder {
            get {
                return this.FolderField;
            }
            set {
                if ((this.FolderField.Equals(value) != true)) {
                    this.FolderField = value;
                    this.RaisePropertyChanged("Folder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MainSL.MainSVC.FoldersTable FoldersTable {
            get {
                return this.FoldersTableField;
            }
            set {
                if ((object.ReferenceEquals(this.FoldersTableField, value) != true)) {
                    this.FoldersTableField = value;
                    this.RaisePropertyChanged("FoldersTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPCommentsTable> TBPCommentsTable {
            get {
                return this.TBPCommentsTableField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPCommentsTableField, value) != true)) {
                    this.TBPCommentsTableField = value;
                    this.RaisePropertyChanged("TBPCommentsTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPHistoryTable> TBPHistoryTable {
            get {
                return this.TBPHistoryTableField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPHistoryTableField, value) != true)) {
                    this.TBPHistoryTableField = value;
                    this.RaisePropertyChanged("TBPHistoryTable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FoldersTable", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal")]
    public partial class FoldersTable : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfoTable> TBPInfoTableField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfoTable> TBPInfoTable {
            get {
                return this.TBPInfoTableField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPInfoTableField, value) != true)) {
                    this.TBPInfoTableField = value;
                    this.RaisePropertyChanged("TBPInfoTable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="MainSVC.MainService")]
    public interface MainService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/DoWork", ReplyAction="urn:MainService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/GetUser", ReplyAction="urn:MainService/GetUserResponse")]
        System.IAsyncResult BeginGetUser(System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.UsersTable EndGetUser(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MainServiceChannel : MainSL.MainSVC.MainService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.UsersTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.UsersTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainServiceClient : System.ServiceModel.ClientBase<MainSL.MainSVC.MainService>, MainSL.MainSVC.MainService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserDelegate;
        
        private EndOperationDelegate onEndGetUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MainServiceClient() {
        }
        
        public MainServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Не удалось установить CookieContainer. Убедитесь, что привязка содержит HttpCooki" +
                            "eContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<GetUserCompletedEventArgs> GetUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void MainSL.MainSVC.MainService.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MainSL.MainSVC.MainService)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((MainSL.MainSVC.MainService)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginGetUser(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUser(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.UsersTable MainSL.MainSVC.MainService.EndGetUser(System.IAsyncResult result) {
            return base.Channel.EndGetUser(result);
        }
        
        private System.IAsyncResult OnBeginGetUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MainSL.MainSVC.MainService)(this)).BeginGetUser(callback, asyncState);
        }
        
        private object[] OnEndGetUser(System.IAsyncResult result) {
            MainSL.MainSVC.UsersTable retVal = ((MainSL.MainSVC.MainService)(this)).EndGetUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserCompleted(object state) {
            if ((this.GetUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserAsync() {
            this.GetUserAsync(null);
        }
        
        public void GetUserAsync(object userState) {
            if ((this.onBeginGetUserDelegate == null)) {
                this.onBeginGetUserDelegate = new BeginOperationDelegate(this.OnBeginGetUser);
            }
            if ((this.onEndGetUserDelegate == null)) {
                this.onEndGetUserDelegate = new EndOperationDelegate(this.OnEndGetUser);
            }
            if ((this.onGetUserCompletedDelegate == null)) {
                this.onGetUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserDelegate, null, this.onEndGetUserDelegate, this.onGetUserCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MainSL.MainSVC.MainService CreateChannel() {
            return new MainServiceClientChannel(this);
        }
        
        private class MainServiceClientChannel : ChannelBase<MainSL.MainSVC.MainService>, MainSL.MainSVC.MainService {
            
            public MainServiceClientChannel(System.ServiceModel.ClientBase<MainSL.MainSVC.MainService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginGetUser(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetUser", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.UsersTable EndGetUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.UsersTable _result = ((MainSL.MainSVC.UsersTable)(base.EndInvoke("GetUser", _args, result)));
                return _result;
            }
        }
    }
}
