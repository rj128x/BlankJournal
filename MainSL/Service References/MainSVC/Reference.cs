//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34209
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace MainSL.MainSVC {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal.Models")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool CanCommentTBPField;
        
        private bool CanDoOperField;
        
        private bool CanEditTBPField;
        
        private bool CanEditUsersField;
        
        private bool IsEditingField;
        
        private string LoginField;
        
        private string MailField;
        
        private string NameField;
        
        private bool SendMailCommentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanCommentTBP {
            get {
                return this.CanCommentTBPField;
            }
            set {
                if ((this.CanCommentTBPField.Equals(value) != true)) {
                    this.CanCommentTBPField = value;
                    this.RaisePropertyChanged("CanCommentTBP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanDoOper {
            get {
                return this.CanDoOperField;
            }
            set {
                if ((this.CanDoOperField.Equals(value) != true)) {
                    this.CanDoOperField = value;
                    this.RaisePropertyChanged("CanDoOper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEditTBP {
            get {
                return this.CanEditTBPField;
            }
            set {
                if ((this.CanEditTBPField.Equals(value) != true)) {
                    this.CanEditTBPField = value;
                    this.RaisePropertyChanged("CanEditTBP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEditUsers {
            get {
                return this.CanEditUsersField;
            }
            set {
                if ((this.CanEditUsersField.Equals(value) != true)) {
                    this.CanEditUsersField = value;
                    this.RaisePropertyChanged("CanEditUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEditing {
            get {
                return this.IsEditingField;
            }
            set {
                if ((this.IsEditingField.Equals(value) != true)) {
                    this.IsEditingField = value;
                    this.RaisePropertyChanged("IsEditing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mail {
            get {
                return this.MailField;
            }
            set {
                if ((object.ReferenceEquals(this.MailField, value) != true)) {
                    this.MailField = value;
                    this.RaisePropertyChanged("Mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SendMailComment {
            get {
                return this.SendMailCommentField;
            }
            set {
                if ((this.SendMailCommentField.Equals(value) != true)) {
                    this.SendMailCommentField = value;
                    this.RaisePropertyChanged("SendMailComment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Folder", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal.Models")]
    public partial class Folder : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBPInfo", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal.Models")]
    public partial class TBPInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool ActiveField;
        
        private int CountActiveCommentsField;
        
        private bool EditingTBPField;
        
        private string FileInfoPDFField;
        
        private string FileInfoWordField;
        
        private string FolderIDField;
        
        private bool HasLastOperField;
        
        private int IDField;
        
        private string IDPDFDataField;
        
        private string IDWordDataField;
        
        private string LastNumberField;
        
        private System.DateTime LastOperField;
        
        private string NameField;
        
        private string NumberField;
        
        private string ObjectInfoField;
        
        private byte[] PDFDataField;
        
        private bool UpdatedPDFField;
        
        private bool UpdatedWordField;
        
        private byte[] WordDataField;
        
        private string md5PDFField;
        
        private string md5WordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountActiveComments {
            get {
                return this.CountActiveCommentsField;
            }
            set {
                if ((this.CountActiveCommentsField.Equals(value) != true)) {
                    this.CountActiveCommentsField = value;
                    this.RaisePropertyChanged("CountActiveComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EditingTBP {
            get {
                return this.EditingTBPField;
            }
            set {
                if ((this.EditingTBPField.Equals(value) != true)) {
                    this.EditingTBPField = value;
                    this.RaisePropertyChanged("EditingTBP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileInfoPDF {
            get {
                return this.FileInfoPDFField;
            }
            set {
                if ((object.ReferenceEquals(this.FileInfoPDFField, value) != true)) {
                    this.FileInfoPDFField = value;
                    this.RaisePropertyChanged("FileInfoPDF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileInfoWord {
            get {
                return this.FileInfoWordField;
            }
            set {
                if ((object.ReferenceEquals(this.FileInfoWordField, value) != true)) {
                    this.FileInfoWordField = value;
                    this.RaisePropertyChanged("FileInfoWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FolderID {
            get {
                return this.FolderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderIDField, value) != true)) {
                    this.FolderIDField = value;
                    this.RaisePropertyChanged("FolderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasLastOper {
            get {
                return this.HasLastOperField;
            }
            set {
                if ((this.HasLastOperField.Equals(value) != true)) {
                    this.HasLastOperField = value;
                    this.RaisePropertyChanged("HasLastOper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDPDFData {
            get {
                return this.IDPDFDataField;
            }
            set {
                if ((object.ReferenceEquals(this.IDPDFDataField, value) != true)) {
                    this.IDPDFDataField = value;
                    this.RaisePropertyChanged("IDPDFData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDWordData {
            get {
                return this.IDWordDataField;
            }
            set {
                if ((object.ReferenceEquals(this.IDWordDataField, value) != true)) {
                    this.IDWordDataField = value;
                    this.RaisePropertyChanged("IDWordData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastNumber {
            get {
                return this.LastNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNumberField, value) != true)) {
                    this.LastNumberField = value;
                    this.RaisePropertyChanged("LastNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastOper {
            get {
                return this.LastOperField;
            }
            set {
                if ((this.LastOperField.Equals(value) != true)) {
                    this.LastOperField = value;
                    this.RaisePropertyChanged("LastOper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectInfo {
            get {
                return this.ObjectInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectInfoField, value) != true)) {
                    this.ObjectInfoField = value;
                    this.RaisePropertyChanged("ObjectInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PDFData {
            get {
                return this.PDFDataField;
            }
            set {
                if ((object.ReferenceEquals(this.PDFDataField, value) != true)) {
                    this.PDFDataField = value;
                    this.RaisePropertyChanged("PDFData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdatedPDF {
            get {
                return this.UpdatedPDFField;
            }
            set {
                if ((this.UpdatedPDFField.Equals(value) != true)) {
                    this.UpdatedPDFField = value;
                    this.RaisePropertyChanged("UpdatedPDF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdatedWord {
            get {
                return this.UpdatedWordField;
            }
            set {
                if ((this.UpdatedWordField.Equals(value) != true)) {
                    this.UpdatedWordField = value;
                    this.RaisePropertyChanged("UpdatedWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] WordData {
            get {
                return this.WordDataField;
            }
            set {
                if ((object.ReferenceEquals(this.WordDataField, value) != true)) {
                    this.WordDataField = value;
                    this.RaisePropertyChanged("WordData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string md5PDF {
            get {
                return this.md5PDFField;
            }
            set {
                if ((object.ReferenceEquals(this.md5PDFField, value) != true)) {
                    this.md5PDFField = value;
                    this.RaisePropertyChanged("md5PDF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string md5Word {
            get {
                return this.md5WordField;
            }
            set {
                if ((object.ReferenceEquals(this.md5WordField, value) != true)) {
                    this.md5WordField = value;
                    this.RaisePropertyChanged("md5Word");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JournalAnswer", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal")]
    public partial class JournalAnswer : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.JournalRecord> DataField;
        
        private bool checkCrossDataField;
        
        private System.Nullable<System.DateTime> dateEndField;
        
        private System.Nullable<System.DateTime> dateStartField;
        
        private string tbpNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.JournalRecord> Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool checkCrossData {
            get {
                return this.checkCrossDataField;
            }
            set {
                if ((this.checkCrossDataField.Equals(value) != true)) {
                    this.checkCrossDataField = value;
                    this.RaisePropertyChanged("checkCrossData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dateEnd {
            get {
                return this.dateEndField;
            }
            set {
                if ((this.dateEndField.Equals(value) != true)) {
                    this.dateEndField = value;
                    this.RaisePropertyChanged("dateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dateStart {
            get {
                return this.dateStartField;
            }
            set {
                if ((this.dateStartField.Equals(value) != true)) {
                    this.dateStartField = value;
                    this.RaisePropertyChanged("dateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tbpNumber {
            get {
                return this.tbpNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.tbpNumberField, value) != true)) {
                    this.tbpNumberField = value;
                    this.RaisePropertyChanged("tbpNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JournalRecord", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal.Models")]
    public partial class JournalRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthorField;
        
        private bool ClosedField;
        
        private string CommentField;
        
        private int CountLSOField;
        
        private string CrossDateField;
        
        private string CrossLSOField;
        
        private System.DateTime DateCreateField;
        
        private System.DateTime DateEndField;
        
        private System.DateTime DateStartField;
        
        private double DoubleNumberField;
        
        private int EndLSOField;
        
        private string FileInfoWordField;
        
        private bool FinishedField;
        
        private bool HasCrossDateField;
        
        private bool HasCrossLSOField;
        
        private string IDWordDataField;
        
        private string NumberField;
        
        private string ShortNumberField;
        
        private int StartLSOField;
        
        private bool StartedField;
        
        private int TBPIDField;
        
        private string TBPNumberField;
        
        private string TaskField;
        
        private byte[] WordDataField;
        
        private bool isInitField;
        
        private bool isOBPField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Closed {
            get {
                return this.ClosedField;
            }
            set {
                if ((this.ClosedField.Equals(value) != true)) {
                    this.ClosedField = value;
                    this.RaisePropertyChanged("Closed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountLSO {
            get {
                return this.CountLSOField;
            }
            set {
                if ((this.CountLSOField.Equals(value) != true)) {
                    this.CountLSOField = value;
                    this.RaisePropertyChanged("CountLSO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrossDate {
            get {
                return this.CrossDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CrossDateField, value) != true)) {
                    this.CrossDateField = value;
                    this.RaisePropertyChanged("CrossDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrossLSO {
            get {
                return this.CrossLSOField;
            }
            set {
                if ((object.ReferenceEquals(this.CrossLSOField, value) != true)) {
                    this.CrossLSOField = value;
                    this.RaisePropertyChanged("CrossLSO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreate {
            get {
                return this.DateCreateField;
            }
            set {
                if ((this.DateCreateField.Equals(value) != true)) {
                    this.DateCreateField = value;
                    this.RaisePropertyChanged("DateCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateEnd {
            get {
                return this.DateEndField;
            }
            set {
                if ((this.DateEndField.Equals(value) != true)) {
                    this.DateEndField = value;
                    this.RaisePropertyChanged("DateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateStart {
            get {
                return this.DateStartField;
            }
            set {
                if ((this.DateStartField.Equals(value) != true)) {
                    this.DateStartField = value;
                    this.RaisePropertyChanged("DateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DoubleNumber {
            get {
                return this.DoubleNumberField;
            }
            set {
                if ((this.DoubleNumberField.Equals(value) != true)) {
                    this.DoubleNumberField = value;
                    this.RaisePropertyChanged("DoubleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EndLSO {
            get {
                return this.EndLSOField;
            }
            set {
                if ((this.EndLSOField.Equals(value) != true)) {
                    this.EndLSOField = value;
                    this.RaisePropertyChanged("EndLSO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileInfoWord {
            get {
                return this.FileInfoWordField;
            }
            set {
                if ((object.ReferenceEquals(this.FileInfoWordField, value) != true)) {
                    this.FileInfoWordField = value;
                    this.RaisePropertyChanged("FileInfoWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Finished {
            get {
                return this.FinishedField;
            }
            set {
                if ((this.FinishedField.Equals(value) != true)) {
                    this.FinishedField = value;
                    this.RaisePropertyChanged("Finished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCrossDate {
            get {
                return this.HasCrossDateField;
            }
            set {
                if ((this.HasCrossDateField.Equals(value) != true)) {
                    this.HasCrossDateField = value;
                    this.RaisePropertyChanged("HasCrossDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCrossLSO {
            get {
                return this.HasCrossLSOField;
            }
            set {
                if ((this.HasCrossLSOField.Equals(value) != true)) {
                    this.HasCrossLSOField = value;
                    this.RaisePropertyChanged("HasCrossLSO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDWordData {
            get {
                return this.IDWordDataField;
            }
            set {
                if ((object.ReferenceEquals(this.IDWordDataField, value) != true)) {
                    this.IDWordDataField = value;
                    this.RaisePropertyChanged("IDWordData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortNumber {
            get {
                return this.ShortNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNumberField, value) != true)) {
                    this.ShortNumberField = value;
                    this.RaisePropertyChanged("ShortNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartLSO {
            get {
                return this.StartLSOField;
            }
            set {
                if ((this.StartLSOField.Equals(value) != true)) {
                    this.StartLSOField = value;
                    this.RaisePropertyChanged("StartLSO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Started {
            get {
                return this.StartedField;
            }
            set {
                if ((this.StartedField.Equals(value) != true)) {
                    this.StartedField = value;
                    this.RaisePropertyChanged("Started");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TBPID {
            get {
                return this.TBPIDField;
            }
            set {
                if ((this.TBPIDField.Equals(value) != true)) {
                    this.TBPIDField = value;
                    this.RaisePropertyChanged("TBPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TBPNumber {
            get {
                return this.TBPNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPNumberField, value) != true)) {
                    this.TBPNumberField = value;
                    this.RaisePropertyChanged("TBPNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Task {
            get {
                return this.TaskField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskField, value) != true)) {
                    this.TaskField = value;
                    this.RaisePropertyChanged("Task");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] WordData {
            get {
                return this.WordDataField;
            }
            set {
                if ((object.ReferenceEquals(this.WordDataField, value) != true)) {
                    this.WordDataField = value;
                    this.RaisePropertyChanged("WordData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isInit {
            get {
                return this.isInitField;
            }
            set {
                if ((this.isInitField.Equals(value) != true)) {
                    this.isInitField = value;
                    this.RaisePropertyChanged("isInit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isOBP {
            get {
                return this.isOBPField;
            }
            set {
                if ((this.isOBPField.Equals(value) != true)) {
                    this.isOBPField = value;
                    this.RaisePropertyChanged("isOBP");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReturnMessage", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal")]
    public partial class ReturnMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string LastOBPField;
        
        private int MaxLSOField;
        
        private string MessageField;
        
        private bool ResultField;
        
        private int RezervLSOField;
        
        private string RezervOBPField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastOBP {
            get {
                return this.LastOBPField;
            }
            set {
                if ((object.ReferenceEquals(this.LastOBPField, value) != true)) {
                    this.LastOBPField = value;
                    this.RaisePropertyChanged("LastOBP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxLSO {
            get {
                return this.MaxLSOField;
            }
            set {
                if ((this.MaxLSOField.Equals(value) != true)) {
                    this.MaxLSOField = value;
                    this.RaisePropertyChanged("MaxLSO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RezervLSO {
            get {
                return this.RezervLSOField;
            }
            set {
                if ((this.RezervLSOField.Equals(value) != true)) {
                    this.RezervLSOField = value;
                    this.RaisePropertyChanged("RezervLSO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RezervOBP {
            get {
                return this.RezervOBPField;
            }
            set {
                if ((object.ReferenceEquals(this.RezervOBPField, value) != true)) {
                    this.RezervOBPField = value;
                    this.RaisePropertyChanged("RezervOBP");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBPComment", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal.Models")]
    public partial class TBPComment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthorField;
        
        private string CommentPerformField;
        
        private string CommentTextField;
        
        private byte[] DataField;
        
        private string DataIDField;
        
        private System.DateTime DateCreateField;
        
        private System.DateTime DatePerformField;
        
        private string FileInfoDataField;
        
        private bool FinishedField;
        
        private string IDField;
        
        private string PerformerField;
        
        private int TBPIDField;
        
        private string TBPNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentPerform {
            get {
                return this.CommentPerformField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentPerformField, value) != true)) {
                    this.CommentPerformField = value;
                    this.RaisePropertyChanged("CommentPerform");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataID {
            get {
                return this.DataIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DataIDField, value) != true)) {
                    this.DataIDField = value;
                    this.RaisePropertyChanged("DataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreate {
            get {
                return this.DateCreateField;
            }
            set {
                if ((this.DateCreateField.Equals(value) != true)) {
                    this.DateCreateField = value;
                    this.RaisePropertyChanged("DateCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DatePerform {
            get {
                return this.DatePerformField;
            }
            set {
                if ((this.DatePerformField.Equals(value) != true)) {
                    this.DatePerformField = value;
                    this.RaisePropertyChanged("DatePerform");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileInfoData {
            get {
                return this.FileInfoDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FileInfoDataField, value) != true)) {
                    this.FileInfoDataField = value;
                    this.RaisePropertyChanged("FileInfoData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Finished {
            get {
                return this.FinishedField;
            }
            set {
                if ((this.FinishedField.Equals(value) != true)) {
                    this.FinishedField = value;
                    this.RaisePropertyChanged("Finished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Performer {
            get {
                return this.PerformerField;
            }
            set {
                if ((object.ReferenceEquals(this.PerformerField, value) != true)) {
                    this.PerformerField = value;
                    this.RaisePropertyChanged("Performer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TBPID {
            get {
                return this.TBPIDField;
            }
            set {
                if ((this.TBPIDField.Equals(value) != true)) {
                    this.TBPIDField = value;
                    this.RaisePropertyChanged("TBPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TBPNumber {
            get {
                return this.TBPNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPNumberField, value) != true)) {
                    this.TBPNumberField = value;
                    this.RaisePropertyChanged("TBPNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBPHistoryRecord", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal.Models")]
    public partial class TBPHistoryRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthorField;
        
        private System.DateTime DateCreateField;
        
        private bool HasNewPDFDataField;
        
        private bool HasNewWordDataField;
        
        private string NewPDFIDField;
        
        private string NewWordIDField;
        
        private string PrevPDFIDField;
        
        private string PrevWordIDField;
        
        private int TBPIDField;
        
        private string TBPNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreate {
            get {
                return this.DateCreateField;
            }
            set {
                if ((this.DateCreateField.Equals(value) != true)) {
                    this.DateCreateField = value;
                    this.RaisePropertyChanged("DateCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasNewPDFData {
            get {
                return this.HasNewPDFDataField;
            }
            set {
                if ((this.HasNewPDFDataField.Equals(value) != true)) {
                    this.HasNewPDFDataField = value;
                    this.RaisePropertyChanged("HasNewPDFData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasNewWordData {
            get {
                return this.HasNewWordDataField;
            }
            set {
                if ((this.HasNewWordDataField.Equals(value) != true)) {
                    this.HasNewWordDataField = value;
                    this.RaisePropertyChanged("HasNewWordData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewPDFID {
            get {
                return this.NewPDFIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPDFIDField, value) != true)) {
                    this.NewPDFIDField = value;
                    this.RaisePropertyChanged("NewPDFID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewWordID {
            get {
                return this.NewWordIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NewWordIDField, value) != true)) {
                    this.NewWordIDField = value;
                    this.RaisePropertyChanged("NewWordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrevPDFID {
            get {
                return this.PrevPDFIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PrevPDFIDField, value) != true)) {
                    this.PrevPDFIDField = value;
                    this.RaisePropertyChanged("PrevPDFID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrevWordID {
            get {
                return this.PrevWordIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PrevWordIDField, value) != true)) {
                    this.PrevWordIDField = value;
                    this.RaisePropertyChanged("PrevWordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TBPID {
            get {
                return this.TBPIDField;
            }
            set {
                if ((this.TBPIDField.Equals(value) != true)) {
                    this.TBPIDField = value;
                    this.RaisePropertyChanged("TBPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TBPNumber {
            get {
                return this.TBPNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPNumberField, value) != true)) {
                    this.TBPNumberField = value;
                    this.RaisePropertyChanged("TBPNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentAnswer", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal")]
    public partial class CommentAnswer : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPComment> DataField;
        
        private System.Nullable<System.DateTime> dateEndField;
        
        private System.Nullable<System.DateTime> dateStartField;
        
        private bool onlyActiveField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPComment> Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dateEnd {
            get {
                return this.dateEndField;
            }
            set {
                if ((this.dateEndField.Equals(value) != true)) {
                    this.dateEndField = value;
                    this.RaisePropertyChanged("dateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dateStart {
            get {
                return this.dateStartField;
            }
            set {
                if ((this.dateStartField.Equals(value) != true)) {
                    this.dateStartField = value;
                    this.RaisePropertyChanged("dateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool onlyActive {
            get {
                return this.onlyActiveField;
            }
            set {
                if ((this.onlyActiveField.Equals(value) != true)) {
                    this.onlyActiveField = value;
                    this.RaisePropertyChanged("onlyActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataRecord", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal.Models")]
    public partial class DataRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthorField;
        
        private byte[] DataField;
        
        private System.DateTime DateCreateField;
        
        private string FileInfoField;
        
        private string IDField;
        
        private string md5Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreate {
            get {
                return this.DateCreateField;
            }
            set {
                if ((this.DateCreateField.Equals(value) != true)) {
                    this.DateCreateField = value;
                    this.RaisePropertyChanged("DateCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileInfo {
            get {
                return this.FileInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.FileInfoField, value) != true)) {
                    this.FileInfoField = value;
                    this.RaisePropertyChanged("FileInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string md5 {
            get {
                return this.md5Field;
            }
            set {
                if ((object.ReferenceEquals(this.md5Field, value) != true)) {
                    this.md5Field = value;
                    this.RaisePropertyChanged("md5");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="MainSVC.MainService")]
    public interface MainService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/DoWork", ReplyAction="urn:MainService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/GetUser", ReplyAction="urn:MainService/GetUserResponse")]
        System.IAsyncResult BeginGetUser(System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.User EndGetUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/GetAllFolders", ReplyAction="urn:MainService/GetAllFoldersResponse")]
        System.IAsyncResult BeginGetAllFolders(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder> EndGetAllFolders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/GetTBPBlanksByFolder", ReplyAction="urn:MainService/GetTBPBlanksByFolderResponse")]
        System.IAsyncResult BeginGetTBPBlanksByFolder(string folderID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo> EndGetTBPBlanksByFolder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/GetJournalBP", ReplyAction="urn:MainService/GetJournalBPResponse")]
        System.IAsyncResult BeginGetJournalBP(MainSL.MainSVC.JournalAnswer Filter, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.JournalAnswer EndGetJournalBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/CreateTBP", ReplyAction="urn:MainService/CreateTBPResponse")]
        System.IAsyncResult BeginCreateTBP(MainSL.MainSVC.TBPInfo newBlank, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EndCreateTBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/InitTBP", ReplyAction="urn:MainService/InitTBPResponse")]
        System.IAsyncResult BeginInitTBP(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.JournalRecord EndInitTBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/InitOBP", ReplyAction="urn:MainService/InitOBPResponse")]
        System.IAsyncResult BeginInitOBP(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.JournalRecord EndInitOBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/InitComment", ReplyAction="urn:MainService/InitCommentResponse")]
        System.IAsyncResult BeginInitComment(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.TBPComment EndInitComment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/getHistory", ReplyAction="urn:MainService/getHistoryResponse")]
        System.IAsyncResult BegingetHistory(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPHistoryRecord> EndgetHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/CreateBP", ReplyAction="urn:MainService/CreateBPResponse")]
        System.IAsyncResult BeginCreateBP(MainSL.MainSVC.JournalRecord journal, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EndCreateBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/FinishBP", ReplyAction="urn:MainService/FinishBPResponse")]
        System.IAsyncResult BeginFinishBP(MainSL.MainSVC.JournalRecord journal, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EndFinishBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/CreateCommentTBP", ReplyAction="urn:MainService/CreateCommentTBPResponse")]
        System.IAsyncResult BeginCreateCommentTBP(MainSL.MainSVC.TBPComment comment, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EndCreateCommentTBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/FinishCommentTBP", ReplyAction="urn:MainService/FinishCommentTBPResponse")]
        System.IAsyncResult BeginFinishCommentTBP(MainSL.MainSVC.TBPComment comment, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EndFinishCommentTBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/GetCommentsList", ReplyAction="urn:MainService/GetCommentsListResponse")]
        System.IAsyncResult BeginGetCommentsList(MainSL.MainSVC.CommentAnswer Filter, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.CommentAnswer EndGetCommentsList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/getOperationsInfo", ReplyAction="urn:MainService/getOperationsInfoResponse")]
        System.IAsyncResult BegingetOperationsInfo(System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EndgetOperationsInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/getAllUsers", ReplyAction="urn:MainService/getAllUsersResponse")]
        System.IAsyncResult BegingetAllUsers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.User> EndgetAllUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/editUser", ReplyAction="urn:MainService/editUserResponse")]
        System.IAsyncResult BegineditUser(MainSL.MainSVC.User user, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EndeditUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/deleteUser", ReplyAction="urn:MainService/deleteUserResponse")]
        System.IAsyncResult BegindeleteUser(MainSL.MainSVC.User user, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EnddeleteUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/addFile", ReplyAction="urn:MainService/addFileResponse")]
        System.IAsyncResult BeginaddFile(string fileInfo, byte[] data, System.DateTime dateLoad, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EndaddFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/removeTBP", ReplyAction="urn:MainService/removeTBPResponse")]
        System.IAsyncResult BeginremoveTBP(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EndremoveTBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/getDataRecord", ReplyAction="urn:MainService/getDataRecordResponse")]
        System.IAsyncResult BegingetDataRecord(string id, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.DataRecord EndgetDataRecord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/updateDataRecord", ReplyAction="urn:MainService/updateDataRecordResponse")]
        System.IAsyncResult BeginupdateDataRecord(MainSL.MainSVC.DataRecord rec, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EndupdateDataRecord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/LogInfo", ReplyAction="urn:MainService/LogInfoResponse")]
        System.IAsyncResult BeginLogInfo(string message, System.DateTime date, System.AsyncCallback callback, object asyncState);
        
        void EndLogInfo(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MainServiceChannel : MainSL.MainSVC.MainService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTBPBlanksByFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTBPBlanksByFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJournalBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJournalBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.JournalAnswer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.JournalAnswer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateTBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateTBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InitTBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InitTBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.JournalRecord Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.JournalRecord)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InitOBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InitOBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.JournalRecord Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.JournalRecord)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InitCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InitCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.TBPComment Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.TBPComment)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPHistoryRecord> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPHistoryRecord>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FinishBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FinishBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateCommentTBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateCommentTBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FinishCommentTBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FinishCommentTBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCommentsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCommentsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.CommentAnswer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.CommentAnswer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getOperationsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getOperationsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class editUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public editUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class deleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public deleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public addFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class removeTBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public removeTBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getDataRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getDataRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.DataRecord Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.DataRecord)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class updateDataRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public updateDataRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainServiceClient : System.ServiceModel.ClientBase<MainSL.MainSVC.MainService>, MainSL.MainSVC.MainService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserDelegate;
        
        private EndOperationDelegate onEndGetUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllFoldersDelegate;
        
        private EndOperationDelegate onEndGetAllFoldersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllFoldersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTBPBlanksByFolderDelegate;
        
        private EndOperationDelegate onEndGetTBPBlanksByFolderDelegate;
        
        private System.Threading.SendOrPostCallback onGetTBPBlanksByFolderCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJournalBPDelegate;
        
        private EndOperationDelegate onEndGetJournalBPDelegate;
        
        private System.Threading.SendOrPostCallback onGetJournalBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateTBPDelegate;
        
        private EndOperationDelegate onEndCreateTBPDelegate;
        
        private System.Threading.SendOrPostCallback onCreateTBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginInitTBPDelegate;
        
        private EndOperationDelegate onEndInitTBPDelegate;
        
        private System.Threading.SendOrPostCallback onInitTBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginInitOBPDelegate;
        
        private EndOperationDelegate onEndInitOBPDelegate;
        
        private System.Threading.SendOrPostCallback onInitOBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginInitCommentDelegate;
        
        private EndOperationDelegate onEndInitCommentDelegate;
        
        private System.Threading.SendOrPostCallback onInitCommentCompletedDelegate;
        
        private BeginOperationDelegate onBegingetHistoryDelegate;
        
        private EndOperationDelegate onEndgetHistoryDelegate;
        
        private System.Threading.SendOrPostCallback ongetHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateBPDelegate;
        
        private EndOperationDelegate onEndCreateBPDelegate;
        
        private System.Threading.SendOrPostCallback onCreateBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginFinishBPDelegate;
        
        private EndOperationDelegate onEndFinishBPDelegate;
        
        private System.Threading.SendOrPostCallback onFinishBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateCommentTBPDelegate;
        
        private EndOperationDelegate onEndCreateCommentTBPDelegate;
        
        private System.Threading.SendOrPostCallback onCreateCommentTBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginFinishCommentTBPDelegate;
        
        private EndOperationDelegate onEndFinishCommentTBPDelegate;
        
        private System.Threading.SendOrPostCallback onFinishCommentTBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCommentsListDelegate;
        
        private EndOperationDelegate onEndGetCommentsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetCommentsListCompletedDelegate;
        
        private BeginOperationDelegate onBegingetOperationsInfoDelegate;
        
        private EndOperationDelegate onEndgetOperationsInfoDelegate;
        
        private System.Threading.SendOrPostCallback ongetOperationsInfoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetAllUsersDelegate;
        
        private EndOperationDelegate onEndgetAllUsersDelegate;
        
        private System.Threading.SendOrPostCallback ongetAllUsersCompletedDelegate;
        
        private BeginOperationDelegate onBegineditUserDelegate;
        
        private EndOperationDelegate onEndeditUserDelegate;
        
        private System.Threading.SendOrPostCallback oneditUserCompletedDelegate;
        
        private BeginOperationDelegate onBegindeleteUserDelegate;
        
        private EndOperationDelegate onEnddeleteUserDelegate;
        
        private System.Threading.SendOrPostCallback ondeleteUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddFileDelegate;
        
        private EndOperationDelegate onEndaddFileDelegate;
        
        private System.Threading.SendOrPostCallback onaddFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginremoveTBPDelegate;
        
        private EndOperationDelegate onEndremoveTBPDelegate;
        
        private System.Threading.SendOrPostCallback onremoveTBPCompletedDelegate;
        
        private BeginOperationDelegate onBegingetDataRecordDelegate;
        
        private EndOperationDelegate onEndgetDataRecordDelegate;
        
        private System.Threading.SendOrPostCallback ongetDataRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginupdateDataRecordDelegate;
        
        private EndOperationDelegate onEndupdateDataRecordDelegate;
        
        private System.Threading.SendOrPostCallback onupdateDataRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogInfoDelegate;
        
        private EndOperationDelegate onEndLogInfoDelegate;
        
        private System.Threading.SendOrPostCallback onLogInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MainServiceClient() {
        }
        
        public MainServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Не удалось установить CookieContainer. Убедитесь, что привязка содержит HttpCooki" +
                            "eContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<GetUserCompletedEventArgs> GetUserCompleted;
        
        public event System.EventHandler<GetAllFoldersCompletedEventArgs> GetAllFoldersCompleted;
        
        public event System.EventHandler<GetTBPBlanksByFolderCompletedEventArgs> GetTBPBlanksByFolderCompleted;
        
        public event System.EventHandler<GetJournalBPCompletedEventArgs> GetJournalBPCompleted;
        
        public event System.EventHandler<CreateTBPCompletedEventArgs> CreateTBPCompleted;
        
        public event System.EventHandler<InitTBPCompletedEventArgs> InitTBPCompleted;
        
        public event System.EventHandler<InitOBPCompletedEventArgs> InitOBPCompleted;
        
        public event System.EventHandler<InitCommentCompletedEventArgs> InitCommentCompleted;
        
        public event System.EventHandler<getHistoryCompletedEventArgs> getHistoryCompleted;
        
        public event System.EventHandler<CreateBPCompletedEventArgs> CreateBPCompleted;
        
        public event System.EventHandler<FinishBPCompletedEventArgs> FinishBPCompleted;
        
        public event System.EventHandler<CreateCommentTBPCompletedEventArgs> CreateCommentTBPCompleted;
        
        public event System.EventHandler<FinishCommentTBPCompletedEventArgs> FinishCommentTBPCompleted;
        
        public event System.EventHandler<GetCommentsListCompletedEventArgs> GetCommentsListCompleted;
        
        public event System.EventHandler<getOperationsInfoCompletedEventArgs> getOperationsInfoCompleted;
        
        public event System.EventHandler<getAllUsersCompletedEventArgs> getAllUsersCompleted;
        
        public event System.EventHandler<editUserCompletedEventArgs> editUserCompleted;
        
        public event System.EventHandler<deleteUserCompletedEventArgs> deleteUserCompleted;
        
        public event System.EventHandler<addFileCompletedEventArgs> addFileCompleted;
        
        public event System.EventHandler<removeTBPCompletedEventArgs> removeTBPCompleted;
        
        public event System.EventHandler<getDataRecordCompletedEventArgs> getDataRecordCompleted;
        
        public event System.EventHandler<updateDataRecordCompletedEventArgs> updateDataRecordCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void MainSL.MainSVC.MainService.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MainSL.MainSVC.MainService)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((MainSL.MainSVC.MainService)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginGetUser(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUser(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.User MainSL.MainSVC.MainService.EndGetUser(System.IAsyncResult result) {
            return base.Channel.EndGetUser(result);
        }
        
        private System.IAsyncResult OnBeginGetUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MainSL.MainSVC.MainService)(this)).BeginGetUser(callback, asyncState);
        }
        
        private object[] OnEndGetUser(System.IAsyncResult result) {
            MainSL.MainSVC.User retVal = ((MainSL.MainSVC.MainService)(this)).EndGetUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserCompleted(object state) {
            if ((this.GetUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserAsync() {
            this.GetUserAsync(null);
        }
        
        public void GetUserAsync(object userState) {
            if ((this.onBeginGetUserDelegate == null)) {
                this.onBeginGetUserDelegate = new BeginOperationDelegate(this.OnBeginGetUser);
            }
            if ((this.onEndGetUserDelegate == null)) {
                this.onEndGetUserDelegate = new EndOperationDelegate(this.OnEndGetUser);
            }
            if ((this.onGetUserCompletedDelegate == null)) {
                this.onGetUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserDelegate, null, this.onEndGetUserDelegate, this.onGetUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginGetAllFolders(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllFolders(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder> MainSL.MainSVC.MainService.EndGetAllFolders(System.IAsyncResult result) {
            return base.Channel.EndGetAllFolders(result);
        }
        
        private System.IAsyncResult OnBeginGetAllFolders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MainSL.MainSVC.MainService)(this)).BeginGetAllFolders(callback, asyncState);
        }
        
        private object[] OnEndGetAllFolders(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder> retVal = ((MainSL.MainSVC.MainService)(this)).EndGetAllFolders(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllFoldersCompleted(object state) {
            if ((this.GetAllFoldersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllFoldersCompleted(this, new GetAllFoldersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllFoldersAsync() {
            this.GetAllFoldersAsync(null);
        }
        
        public void GetAllFoldersAsync(object userState) {
            if ((this.onBeginGetAllFoldersDelegate == null)) {
                this.onBeginGetAllFoldersDelegate = new BeginOperationDelegate(this.OnBeginGetAllFolders);
            }
            if ((this.onEndGetAllFoldersDelegate == null)) {
                this.onEndGetAllFoldersDelegate = new EndOperationDelegate(this.OnEndGetAllFolders);
            }
            if ((this.onGetAllFoldersCompletedDelegate == null)) {
                this.onGetAllFoldersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllFoldersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllFoldersDelegate, null, this.onEndGetAllFoldersDelegate, this.onGetAllFoldersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginGetTBPBlanksByFolder(string folderID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTBPBlanksByFolder(folderID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo> MainSL.MainSVC.MainService.EndGetTBPBlanksByFolder(System.IAsyncResult result) {
            return base.Channel.EndGetTBPBlanksByFolder(result);
        }
        
        private System.IAsyncResult OnBeginGetTBPBlanksByFolder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string folderID = ((string)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginGetTBPBlanksByFolder(folderID, callback, asyncState);
        }
        
        private object[] OnEndGetTBPBlanksByFolder(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo> retVal = ((MainSL.MainSVC.MainService)(this)).EndGetTBPBlanksByFolder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTBPBlanksByFolderCompleted(object state) {
            if ((this.GetTBPBlanksByFolderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTBPBlanksByFolderCompleted(this, new GetTBPBlanksByFolderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTBPBlanksByFolderAsync(string folderID) {
            this.GetTBPBlanksByFolderAsync(folderID, null);
        }
        
        public void GetTBPBlanksByFolderAsync(string folderID, object userState) {
            if ((this.onBeginGetTBPBlanksByFolderDelegate == null)) {
                this.onBeginGetTBPBlanksByFolderDelegate = new BeginOperationDelegate(this.OnBeginGetTBPBlanksByFolder);
            }
            if ((this.onEndGetTBPBlanksByFolderDelegate == null)) {
                this.onEndGetTBPBlanksByFolderDelegate = new EndOperationDelegate(this.OnEndGetTBPBlanksByFolder);
            }
            if ((this.onGetTBPBlanksByFolderCompletedDelegate == null)) {
                this.onGetTBPBlanksByFolderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTBPBlanksByFolderCompleted);
            }
            base.InvokeAsync(this.onBeginGetTBPBlanksByFolderDelegate, new object[] {
                        folderID}, this.onEndGetTBPBlanksByFolderDelegate, this.onGetTBPBlanksByFolderCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginGetJournalBP(MainSL.MainSVC.JournalAnswer Filter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJournalBP(Filter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.JournalAnswer MainSL.MainSVC.MainService.EndGetJournalBP(System.IAsyncResult result) {
            return base.Channel.EndGetJournalBP(result);
        }
        
        private System.IAsyncResult OnBeginGetJournalBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.JournalAnswer Filter = ((MainSL.MainSVC.JournalAnswer)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginGetJournalBP(Filter, callback, asyncState);
        }
        
        private object[] OnEndGetJournalBP(System.IAsyncResult result) {
            MainSL.MainSVC.JournalAnswer retVal = ((MainSL.MainSVC.MainService)(this)).EndGetJournalBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJournalBPCompleted(object state) {
            if ((this.GetJournalBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJournalBPCompleted(this, new GetJournalBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJournalBPAsync(MainSL.MainSVC.JournalAnswer Filter) {
            this.GetJournalBPAsync(Filter, null);
        }
        
        public void GetJournalBPAsync(MainSL.MainSVC.JournalAnswer Filter, object userState) {
            if ((this.onBeginGetJournalBPDelegate == null)) {
                this.onBeginGetJournalBPDelegate = new BeginOperationDelegate(this.OnBeginGetJournalBP);
            }
            if ((this.onEndGetJournalBPDelegate == null)) {
                this.onEndGetJournalBPDelegate = new EndOperationDelegate(this.OnEndGetJournalBP);
            }
            if ((this.onGetJournalBPCompletedDelegate == null)) {
                this.onGetJournalBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJournalBPCompleted);
            }
            base.InvokeAsync(this.onBeginGetJournalBPDelegate, new object[] {
                        Filter}, this.onEndGetJournalBPDelegate, this.onGetJournalBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginCreateTBP(MainSL.MainSVC.TBPInfo newBlank, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateTBP(newBlank, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EndCreateTBP(System.IAsyncResult result) {
            return base.Channel.EndCreateTBP(result);
        }
        
        private System.IAsyncResult OnBeginCreateTBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.TBPInfo newBlank = ((MainSL.MainSVC.TBPInfo)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginCreateTBP(newBlank, callback, asyncState);
        }
        
        private object[] OnEndCreateTBP(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EndCreateTBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateTBPCompleted(object state) {
            if ((this.CreateTBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateTBPCompleted(this, new CreateTBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateTBPAsync(MainSL.MainSVC.TBPInfo newBlank) {
            this.CreateTBPAsync(newBlank, null);
        }
        
        public void CreateTBPAsync(MainSL.MainSVC.TBPInfo newBlank, object userState) {
            if ((this.onBeginCreateTBPDelegate == null)) {
                this.onBeginCreateTBPDelegate = new BeginOperationDelegate(this.OnBeginCreateTBP);
            }
            if ((this.onEndCreateTBPDelegate == null)) {
                this.onEndCreateTBPDelegate = new EndOperationDelegate(this.OnEndCreateTBP);
            }
            if ((this.onCreateTBPCompletedDelegate == null)) {
                this.onCreateTBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateTBPCompleted);
            }
            base.InvokeAsync(this.onBeginCreateTBPDelegate, new object[] {
                        newBlank}, this.onEndCreateTBPDelegate, this.onCreateTBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginInitTBP(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInitTBP(tbp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.JournalRecord MainSL.MainSVC.MainService.EndInitTBP(System.IAsyncResult result) {
            return base.Channel.EndInitTBP(result);
        }
        
        private System.IAsyncResult OnBeginInitTBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.TBPInfo tbp = ((MainSL.MainSVC.TBPInfo)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginInitTBP(tbp, callback, asyncState);
        }
        
        private object[] OnEndInitTBP(System.IAsyncResult result) {
            MainSL.MainSVC.JournalRecord retVal = ((MainSL.MainSVC.MainService)(this)).EndInitTBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInitTBPCompleted(object state) {
            if ((this.InitTBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InitTBPCompleted(this, new InitTBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InitTBPAsync(MainSL.MainSVC.TBPInfo tbp) {
            this.InitTBPAsync(tbp, null);
        }
        
        public void InitTBPAsync(MainSL.MainSVC.TBPInfo tbp, object userState) {
            if ((this.onBeginInitTBPDelegate == null)) {
                this.onBeginInitTBPDelegate = new BeginOperationDelegate(this.OnBeginInitTBP);
            }
            if ((this.onEndInitTBPDelegate == null)) {
                this.onEndInitTBPDelegate = new EndOperationDelegate(this.OnEndInitTBP);
            }
            if ((this.onInitTBPCompletedDelegate == null)) {
                this.onInitTBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInitTBPCompleted);
            }
            base.InvokeAsync(this.onBeginInitTBPDelegate, new object[] {
                        tbp}, this.onEndInitTBPDelegate, this.onInitTBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginInitOBP(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInitOBP(tbp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.JournalRecord MainSL.MainSVC.MainService.EndInitOBP(System.IAsyncResult result) {
            return base.Channel.EndInitOBP(result);
        }
        
        private System.IAsyncResult OnBeginInitOBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.TBPInfo tbp = ((MainSL.MainSVC.TBPInfo)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginInitOBP(tbp, callback, asyncState);
        }
        
        private object[] OnEndInitOBP(System.IAsyncResult result) {
            MainSL.MainSVC.JournalRecord retVal = ((MainSL.MainSVC.MainService)(this)).EndInitOBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInitOBPCompleted(object state) {
            if ((this.InitOBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InitOBPCompleted(this, new InitOBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InitOBPAsync(MainSL.MainSVC.TBPInfo tbp) {
            this.InitOBPAsync(tbp, null);
        }
        
        public void InitOBPAsync(MainSL.MainSVC.TBPInfo tbp, object userState) {
            if ((this.onBeginInitOBPDelegate == null)) {
                this.onBeginInitOBPDelegate = new BeginOperationDelegate(this.OnBeginInitOBP);
            }
            if ((this.onEndInitOBPDelegate == null)) {
                this.onEndInitOBPDelegate = new EndOperationDelegate(this.OnEndInitOBP);
            }
            if ((this.onInitOBPCompletedDelegate == null)) {
                this.onInitOBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInitOBPCompleted);
            }
            base.InvokeAsync(this.onBeginInitOBPDelegate, new object[] {
                        tbp}, this.onEndInitOBPDelegate, this.onInitOBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginInitComment(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInitComment(tbp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.TBPComment MainSL.MainSVC.MainService.EndInitComment(System.IAsyncResult result) {
            return base.Channel.EndInitComment(result);
        }
        
        private System.IAsyncResult OnBeginInitComment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.TBPInfo tbp = ((MainSL.MainSVC.TBPInfo)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginInitComment(tbp, callback, asyncState);
        }
        
        private object[] OnEndInitComment(System.IAsyncResult result) {
            MainSL.MainSVC.TBPComment retVal = ((MainSL.MainSVC.MainService)(this)).EndInitComment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInitCommentCompleted(object state) {
            if ((this.InitCommentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InitCommentCompleted(this, new InitCommentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InitCommentAsync(MainSL.MainSVC.TBPInfo tbp) {
            this.InitCommentAsync(tbp, null);
        }
        
        public void InitCommentAsync(MainSL.MainSVC.TBPInfo tbp, object userState) {
            if ((this.onBeginInitCommentDelegate == null)) {
                this.onBeginInitCommentDelegate = new BeginOperationDelegate(this.OnBeginInitComment);
            }
            if ((this.onEndInitCommentDelegate == null)) {
                this.onEndInitCommentDelegate = new EndOperationDelegate(this.OnEndInitComment);
            }
            if ((this.onInitCommentCompletedDelegate == null)) {
                this.onInitCommentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInitCommentCompleted);
            }
            base.InvokeAsync(this.onBeginInitCommentDelegate, new object[] {
                        tbp}, this.onEndInitCommentDelegate, this.onInitCommentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BegingetHistory(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetHistory(tbp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPHistoryRecord> MainSL.MainSVC.MainService.EndgetHistory(System.IAsyncResult result) {
            return base.Channel.EndgetHistory(result);
        }
        
        private System.IAsyncResult OnBegingetHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.TBPInfo tbp = ((MainSL.MainSVC.TBPInfo)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BegingetHistory(tbp, callback, asyncState);
        }
        
        private object[] OnEndgetHistory(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPHistoryRecord> retVal = ((MainSL.MainSVC.MainService)(this)).EndgetHistory(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetHistoryCompleted(object state) {
            if ((this.getHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getHistoryCompleted(this, new getHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getHistoryAsync(MainSL.MainSVC.TBPInfo tbp) {
            this.getHistoryAsync(tbp, null);
        }
        
        public void getHistoryAsync(MainSL.MainSVC.TBPInfo tbp, object userState) {
            if ((this.onBegingetHistoryDelegate == null)) {
                this.onBegingetHistoryDelegate = new BeginOperationDelegate(this.OnBegingetHistory);
            }
            if ((this.onEndgetHistoryDelegate == null)) {
                this.onEndgetHistoryDelegate = new EndOperationDelegate(this.OnEndgetHistory);
            }
            if ((this.ongetHistoryCompletedDelegate == null)) {
                this.ongetHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetHistoryCompleted);
            }
            base.InvokeAsync(this.onBegingetHistoryDelegate, new object[] {
                        tbp}, this.onEndgetHistoryDelegate, this.ongetHistoryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginCreateBP(MainSL.MainSVC.JournalRecord journal, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateBP(journal, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EndCreateBP(System.IAsyncResult result) {
            return base.Channel.EndCreateBP(result);
        }
        
        private System.IAsyncResult OnBeginCreateBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.JournalRecord journal = ((MainSL.MainSVC.JournalRecord)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginCreateBP(journal, callback, asyncState);
        }
        
        private object[] OnEndCreateBP(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EndCreateBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateBPCompleted(object state) {
            if ((this.CreateBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateBPCompleted(this, new CreateBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateBPAsync(MainSL.MainSVC.JournalRecord journal) {
            this.CreateBPAsync(journal, null);
        }
        
        public void CreateBPAsync(MainSL.MainSVC.JournalRecord journal, object userState) {
            if ((this.onBeginCreateBPDelegate == null)) {
                this.onBeginCreateBPDelegate = new BeginOperationDelegate(this.OnBeginCreateBP);
            }
            if ((this.onEndCreateBPDelegate == null)) {
                this.onEndCreateBPDelegate = new EndOperationDelegate(this.OnEndCreateBP);
            }
            if ((this.onCreateBPCompletedDelegate == null)) {
                this.onCreateBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateBPCompleted);
            }
            base.InvokeAsync(this.onBeginCreateBPDelegate, new object[] {
                        journal}, this.onEndCreateBPDelegate, this.onCreateBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginFinishBP(MainSL.MainSVC.JournalRecord journal, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFinishBP(journal, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EndFinishBP(System.IAsyncResult result) {
            return base.Channel.EndFinishBP(result);
        }
        
        private System.IAsyncResult OnBeginFinishBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.JournalRecord journal = ((MainSL.MainSVC.JournalRecord)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginFinishBP(journal, callback, asyncState);
        }
        
        private object[] OnEndFinishBP(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EndFinishBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFinishBPCompleted(object state) {
            if ((this.FinishBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FinishBPCompleted(this, new FinishBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FinishBPAsync(MainSL.MainSVC.JournalRecord journal) {
            this.FinishBPAsync(journal, null);
        }
        
        public void FinishBPAsync(MainSL.MainSVC.JournalRecord journal, object userState) {
            if ((this.onBeginFinishBPDelegate == null)) {
                this.onBeginFinishBPDelegate = new BeginOperationDelegate(this.OnBeginFinishBP);
            }
            if ((this.onEndFinishBPDelegate == null)) {
                this.onEndFinishBPDelegate = new EndOperationDelegate(this.OnEndFinishBP);
            }
            if ((this.onFinishBPCompletedDelegate == null)) {
                this.onFinishBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFinishBPCompleted);
            }
            base.InvokeAsync(this.onBeginFinishBPDelegate, new object[] {
                        journal}, this.onEndFinishBPDelegate, this.onFinishBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginCreateCommentTBP(MainSL.MainSVC.TBPComment comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateCommentTBP(comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EndCreateCommentTBP(System.IAsyncResult result) {
            return base.Channel.EndCreateCommentTBP(result);
        }
        
        private System.IAsyncResult OnBeginCreateCommentTBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.TBPComment comment = ((MainSL.MainSVC.TBPComment)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginCreateCommentTBP(comment, callback, asyncState);
        }
        
        private object[] OnEndCreateCommentTBP(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EndCreateCommentTBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateCommentTBPCompleted(object state) {
            if ((this.CreateCommentTBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateCommentTBPCompleted(this, new CreateCommentTBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateCommentTBPAsync(MainSL.MainSVC.TBPComment comment) {
            this.CreateCommentTBPAsync(comment, null);
        }
        
        public void CreateCommentTBPAsync(MainSL.MainSVC.TBPComment comment, object userState) {
            if ((this.onBeginCreateCommentTBPDelegate == null)) {
                this.onBeginCreateCommentTBPDelegate = new BeginOperationDelegate(this.OnBeginCreateCommentTBP);
            }
            if ((this.onEndCreateCommentTBPDelegate == null)) {
                this.onEndCreateCommentTBPDelegate = new EndOperationDelegate(this.OnEndCreateCommentTBP);
            }
            if ((this.onCreateCommentTBPCompletedDelegate == null)) {
                this.onCreateCommentTBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateCommentTBPCompleted);
            }
            base.InvokeAsync(this.onBeginCreateCommentTBPDelegate, new object[] {
                        comment}, this.onEndCreateCommentTBPDelegate, this.onCreateCommentTBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginFinishCommentTBP(MainSL.MainSVC.TBPComment comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFinishCommentTBP(comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EndFinishCommentTBP(System.IAsyncResult result) {
            return base.Channel.EndFinishCommentTBP(result);
        }
        
        private System.IAsyncResult OnBeginFinishCommentTBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.TBPComment comment = ((MainSL.MainSVC.TBPComment)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginFinishCommentTBP(comment, callback, asyncState);
        }
        
        private object[] OnEndFinishCommentTBP(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EndFinishCommentTBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFinishCommentTBPCompleted(object state) {
            if ((this.FinishCommentTBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FinishCommentTBPCompleted(this, new FinishCommentTBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FinishCommentTBPAsync(MainSL.MainSVC.TBPComment comment) {
            this.FinishCommentTBPAsync(comment, null);
        }
        
        public void FinishCommentTBPAsync(MainSL.MainSVC.TBPComment comment, object userState) {
            if ((this.onBeginFinishCommentTBPDelegate == null)) {
                this.onBeginFinishCommentTBPDelegate = new BeginOperationDelegate(this.OnBeginFinishCommentTBP);
            }
            if ((this.onEndFinishCommentTBPDelegate == null)) {
                this.onEndFinishCommentTBPDelegate = new EndOperationDelegate(this.OnEndFinishCommentTBP);
            }
            if ((this.onFinishCommentTBPCompletedDelegate == null)) {
                this.onFinishCommentTBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFinishCommentTBPCompleted);
            }
            base.InvokeAsync(this.onBeginFinishCommentTBPDelegate, new object[] {
                        comment}, this.onEndFinishCommentTBPDelegate, this.onFinishCommentTBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginGetCommentsList(MainSL.MainSVC.CommentAnswer Filter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCommentsList(Filter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.CommentAnswer MainSL.MainSVC.MainService.EndGetCommentsList(System.IAsyncResult result) {
            return base.Channel.EndGetCommentsList(result);
        }
        
        private System.IAsyncResult OnBeginGetCommentsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.CommentAnswer Filter = ((MainSL.MainSVC.CommentAnswer)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginGetCommentsList(Filter, callback, asyncState);
        }
        
        private object[] OnEndGetCommentsList(System.IAsyncResult result) {
            MainSL.MainSVC.CommentAnswer retVal = ((MainSL.MainSVC.MainService)(this)).EndGetCommentsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCommentsListCompleted(object state) {
            if ((this.GetCommentsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCommentsListCompleted(this, new GetCommentsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCommentsListAsync(MainSL.MainSVC.CommentAnswer Filter) {
            this.GetCommentsListAsync(Filter, null);
        }
        
        public void GetCommentsListAsync(MainSL.MainSVC.CommentAnswer Filter, object userState) {
            if ((this.onBeginGetCommentsListDelegate == null)) {
                this.onBeginGetCommentsListDelegate = new BeginOperationDelegate(this.OnBeginGetCommentsList);
            }
            if ((this.onEndGetCommentsListDelegate == null)) {
                this.onEndGetCommentsListDelegate = new EndOperationDelegate(this.OnEndGetCommentsList);
            }
            if ((this.onGetCommentsListCompletedDelegate == null)) {
                this.onGetCommentsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCommentsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetCommentsListDelegate, new object[] {
                        Filter}, this.onEndGetCommentsListDelegate, this.onGetCommentsListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BegingetOperationsInfo(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetOperationsInfo(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EndgetOperationsInfo(System.IAsyncResult result) {
            return base.Channel.EndgetOperationsInfo(result);
        }
        
        private System.IAsyncResult OnBegingetOperationsInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MainSL.MainSVC.MainService)(this)).BegingetOperationsInfo(callback, asyncState);
        }
        
        private object[] OnEndgetOperationsInfo(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EndgetOperationsInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetOperationsInfoCompleted(object state) {
            if ((this.getOperationsInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getOperationsInfoCompleted(this, new getOperationsInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getOperationsInfoAsync() {
            this.getOperationsInfoAsync(null);
        }
        
        public void getOperationsInfoAsync(object userState) {
            if ((this.onBegingetOperationsInfoDelegate == null)) {
                this.onBegingetOperationsInfoDelegate = new BeginOperationDelegate(this.OnBegingetOperationsInfo);
            }
            if ((this.onEndgetOperationsInfoDelegate == null)) {
                this.onEndgetOperationsInfoDelegate = new EndOperationDelegate(this.OnEndgetOperationsInfo);
            }
            if ((this.ongetOperationsInfoCompletedDelegate == null)) {
                this.ongetOperationsInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetOperationsInfoCompleted);
            }
            base.InvokeAsync(this.onBegingetOperationsInfoDelegate, null, this.onEndgetOperationsInfoDelegate, this.ongetOperationsInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BegingetAllUsers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetAllUsers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.User> MainSL.MainSVC.MainService.EndgetAllUsers(System.IAsyncResult result) {
            return base.Channel.EndgetAllUsers(result);
        }
        
        private System.IAsyncResult OnBegingetAllUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MainSL.MainSVC.MainService)(this)).BegingetAllUsers(callback, asyncState);
        }
        
        private object[] OnEndgetAllUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.User> retVal = ((MainSL.MainSVC.MainService)(this)).EndgetAllUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetAllUsersCompleted(object state) {
            if ((this.getAllUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getAllUsersCompleted(this, new getAllUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getAllUsersAsync() {
            this.getAllUsersAsync(null);
        }
        
        public void getAllUsersAsync(object userState) {
            if ((this.onBegingetAllUsersDelegate == null)) {
                this.onBegingetAllUsersDelegate = new BeginOperationDelegate(this.OnBegingetAllUsers);
            }
            if ((this.onEndgetAllUsersDelegate == null)) {
                this.onEndgetAllUsersDelegate = new EndOperationDelegate(this.OnEndgetAllUsers);
            }
            if ((this.ongetAllUsersCompletedDelegate == null)) {
                this.ongetAllUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAllUsersCompleted);
            }
            base.InvokeAsync(this.onBegingetAllUsersDelegate, null, this.onEndgetAllUsersDelegate, this.ongetAllUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BegineditUser(MainSL.MainSVC.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegineditUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EndeditUser(System.IAsyncResult result) {
            return base.Channel.EndeditUser(result);
        }
        
        private System.IAsyncResult OnBegineditUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.User user = ((MainSL.MainSVC.User)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BegineditUser(user, callback, asyncState);
        }
        
        private object[] OnEndeditUser(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EndeditUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OneditUserCompleted(object state) {
            if ((this.editUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.editUserCompleted(this, new editUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void editUserAsync(MainSL.MainSVC.User user) {
            this.editUserAsync(user, null);
        }
        
        public void editUserAsync(MainSL.MainSVC.User user, object userState) {
            if ((this.onBegineditUserDelegate == null)) {
                this.onBegineditUserDelegate = new BeginOperationDelegate(this.OnBegineditUser);
            }
            if ((this.onEndeditUserDelegate == null)) {
                this.onEndeditUserDelegate = new EndOperationDelegate(this.OnEndeditUser);
            }
            if ((this.oneditUserCompletedDelegate == null)) {
                this.oneditUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OneditUserCompleted);
            }
            base.InvokeAsync(this.onBegineditUserDelegate, new object[] {
                        user}, this.onEndeditUserDelegate, this.oneditUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BegindeleteUser(MainSL.MainSVC.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegindeleteUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EnddeleteUser(System.IAsyncResult result) {
            return base.Channel.EnddeleteUser(result);
        }
        
        private System.IAsyncResult OnBegindeleteUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.User user = ((MainSL.MainSVC.User)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BegindeleteUser(user, callback, asyncState);
        }
        
        private object[] OnEnddeleteUser(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EnddeleteUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OndeleteUserCompleted(object state) {
            if ((this.deleteUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.deleteUserCompleted(this, new deleteUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void deleteUserAsync(MainSL.MainSVC.User user) {
            this.deleteUserAsync(user, null);
        }
        
        public void deleteUserAsync(MainSL.MainSVC.User user, object userState) {
            if ((this.onBegindeleteUserDelegate == null)) {
                this.onBegindeleteUserDelegate = new BeginOperationDelegate(this.OnBegindeleteUser);
            }
            if ((this.onEnddeleteUserDelegate == null)) {
                this.onEnddeleteUserDelegate = new EndOperationDelegate(this.OnEnddeleteUser);
            }
            if ((this.ondeleteUserCompletedDelegate == null)) {
                this.ondeleteUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OndeleteUserCompleted);
            }
            base.InvokeAsync(this.onBegindeleteUserDelegate, new object[] {
                        user}, this.onEnddeleteUserDelegate, this.ondeleteUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginaddFile(string fileInfo, byte[] data, System.DateTime dateLoad, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddFile(fileInfo, data, dateLoad, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EndaddFile(System.IAsyncResult result) {
            return base.Channel.EndaddFile(result);
        }
        
        private System.IAsyncResult OnBeginaddFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileInfo = ((string)(inValues[0]));
            byte[] data = ((byte[])(inValues[1]));
            System.DateTime dateLoad = ((System.DateTime)(inValues[2]));
            return ((MainSL.MainSVC.MainService)(this)).BeginaddFile(fileInfo, data, dateLoad, callback, asyncState);
        }
        
        private object[] OnEndaddFile(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EndaddFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnaddFileCompleted(object state) {
            if ((this.addFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addFileCompleted(this, new addFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addFileAsync(string fileInfo, byte[] data, System.DateTime dateLoad) {
            this.addFileAsync(fileInfo, data, dateLoad, null);
        }
        
        public void addFileAsync(string fileInfo, byte[] data, System.DateTime dateLoad, object userState) {
            if ((this.onBeginaddFileDelegate == null)) {
                this.onBeginaddFileDelegate = new BeginOperationDelegate(this.OnBeginaddFile);
            }
            if ((this.onEndaddFileDelegate == null)) {
                this.onEndaddFileDelegate = new EndOperationDelegate(this.OnEndaddFile);
            }
            if ((this.onaddFileCompletedDelegate == null)) {
                this.onaddFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddFileCompleted);
            }
            base.InvokeAsync(this.onBeginaddFileDelegate, new object[] {
                        fileInfo,
                        data,
                        dateLoad}, this.onEndaddFileDelegate, this.onaddFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginremoveTBP(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginremoveTBP(tbp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EndremoveTBP(System.IAsyncResult result) {
            return base.Channel.EndremoveTBP(result);
        }
        
        private System.IAsyncResult OnBeginremoveTBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.TBPInfo tbp = ((MainSL.MainSVC.TBPInfo)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginremoveTBP(tbp, callback, asyncState);
        }
        
        private object[] OnEndremoveTBP(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EndremoveTBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnremoveTBPCompleted(object state) {
            if ((this.removeTBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.removeTBPCompleted(this, new removeTBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void removeTBPAsync(MainSL.MainSVC.TBPInfo tbp) {
            this.removeTBPAsync(tbp, null);
        }
        
        public void removeTBPAsync(MainSL.MainSVC.TBPInfo tbp, object userState) {
            if ((this.onBeginremoveTBPDelegate == null)) {
                this.onBeginremoveTBPDelegate = new BeginOperationDelegate(this.OnBeginremoveTBP);
            }
            if ((this.onEndremoveTBPDelegate == null)) {
                this.onEndremoveTBPDelegate = new EndOperationDelegate(this.OnEndremoveTBP);
            }
            if ((this.onremoveTBPCompletedDelegate == null)) {
                this.onremoveTBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnremoveTBPCompleted);
            }
            base.InvokeAsync(this.onBeginremoveTBPDelegate, new object[] {
                        tbp}, this.onEndremoveTBPDelegate, this.onremoveTBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BegingetDataRecord(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetDataRecord(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.DataRecord MainSL.MainSVC.MainService.EndgetDataRecord(System.IAsyncResult result) {
            return base.Channel.EndgetDataRecord(result);
        }
        
        private System.IAsyncResult OnBegingetDataRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BegingetDataRecord(id, callback, asyncState);
        }
        
        private object[] OnEndgetDataRecord(System.IAsyncResult result) {
            MainSL.MainSVC.DataRecord retVal = ((MainSL.MainSVC.MainService)(this)).EndgetDataRecord(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetDataRecordCompleted(object state) {
            if ((this.getDataRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getDataRecordCompleted(this, new getDataRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getDataRecordAsync(string id) {
            this.getDataRecordAsync(id, null);
        }
        
        public void getDataRecordAsync(string id, object userState) {
            if ((this.onBegingetDataRecordDelegate == null)) {
                this.onBegingetDataRecordDelegate = new BeginOperationDelegate(this.OnBegingetDataRecord);
            }
            if ((this.onEndgetDataRecordDelegate == null)) {
                this.onEndgetDataRecordDelegate = new EndOperationDelegate(this.OnEndgetDataRecord);
            }
            if ((this.ongetDataRecordCompletedDelegate == null)) {
                this.ongetDataRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetDataRecordCompleted);
            }
            base.InvokeAsync(this.onBegingetDataRecordDelegate, new object[] {
                        id}, this.onEndgetDataRecordDelegate, this.ongetDataRecordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginupdateDataRecord(MainSL.MainSVC.DataRecord rec, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginupdateDataRecord(rec, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EndupdateDataRecord(System.IAsyncResult result) {
            return base.Channel.EndupdateDataRecord(result);
        }
        
        private System.IAsyncResult OnBeginupdateDataRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.DataRecord rec = ((MainSL.MainSVC.DataRecord)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginupdateDataRecord(rec, callback, asyncState);
        }
        
        private object[] OnEndupdateDataRecord(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EndupdateDataRecord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnupdateDataRecordCompleted(object state) {
            if ((this.updateDataRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.updateDataRecordCompleted(this, new updateDataRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void updateDataRecordAsync(MainSL.MainSVC.DataRecord rec) {
            this.updateDataRecordAsync(rec, null);
        }
        
        public void updateDataRecordAsync(MainSL.MainSVC.DataRecord rec, object userState) {
            if ((this.onBeginupdateDataRecordDelegate == null)) {
                this.onBeginupdateDataRecordDelegate = new BeginOperationDelegate(this.OnBeginupdateDataRecord);
            }
            if ((this.onEndupdateDataRecordDelegate == null)) {
                this.onEndupdateDataRecordDelegate = new EndOperationDelegate(this.OnEndupdateDataRecord);
            }
            if ((this.onupdateDataRecordCompletedDelegate == null)) {
                this.onupdateDataRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnupdateDataRecordCompleted);
            }
            base.InvokeAsync(this.onBeginupdateDataRecordDelegate, new object[] {
                        rec}, this.onEndupdateDataRecordDelegate, this.onupdateDataRecordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginLogInfo(string message, System.DateTime date, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogInfo(message, date, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void MainSL.MainSVC.MainService.EndLogInfo(System.IAsyncResult result) {
            base.Channel.EndLogInfo(result);
        }
        
        private System.IAsyncResult OnBeginLogInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string message = ((string)(inValues[0]));
            System.DateTime date = ((System.DateTime)(inValues[1]));
            return ((MainSL.MainSVC.MainService)(this)).BeginLogInfo(message, date, callback, asyncState);
        }
        
        private object[] OnEndLogInfo(System.IAsyncResult result) {
            ((MainSL.MainSVC.MainService)(this)).EndLogInfo(result);
            return null;
        }
        
        private void OnLogInfoCompleted(object state) {
            if ((this.LogInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogInfoAsync(string message, System.DateTime date) {
            this.LogInfoAsync(message, date, null);
        }
        
        public void LogInfoAsync(string message, System.DateTime date, object userState) {
            if ((this.onBeginLogInfoDelegate == null)) {
                this.onBeginLogInfoDelegate = new BeginOperationDelegate(this.OnBeginLogInfo);
            }
            if ((this.onEndLogInfoDelegate == null)) {
                this.onEndLogInfoDelegate = new EndOperationDelegate(this.OnEndLogInfo);
            }
            if ((this.onLogInfoCompletedDelegate == null)) {
                this.onLogInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogInfoCompleted);
            }
            base.InvokeAsync(this.onBeginLogInfoDelegate, new object[] {
                        message,
                        date}, this.onEndLogInfoDelegate, this.onLogInfoCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MainSL.MainSVC.MainService CreateChannel() {
            return new MainServiceClientChannel(this);
        }
        
        private class MainServiceClientChannel : ChannelBase<MainSL.MainSVC.MainService>, MainSL.MainSVC.MainService {
            
            public MainServiceClientChannel(System.ServiceModel.ClientBase<MainSL.MainSVC.MainService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginGetUser(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetUser", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.User EndGetUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.User _result = ((MainSL.MainSVC.User)(base.EndInvoke("GetUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllFolders(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllFolders", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder> EndGetAllFolders(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder> _result = ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder>)(base.EndInvoke("GetAllFolders", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTBPBlanksByFolder(string folderID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = folderID;
                System.IAsyncResult _result = base.BeginInvoke("GetTBPBlanksByFolder", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo> EndGetTBPBlanksByFolder(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo>)(base.EndInvoke("GetTBPBlanksByFolder", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetJournalBP(MainSL.MainSVC.JournalAnswer Filter, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Filter;
                System.IAsyncResult _result = base.BeginInvoke("GetJournalBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.JournalAnswer EndGetJournalBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.JournalAnswer _result = ((MainSL.MainSVC.JournalAnswer)(base.EndInvoke("GetJournalBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateTBP(MainSL.MainSVC.TBPInfo newBlank, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = newBlank;
                System.IAsyncResult _result = base.BeginInvoke("CreateTBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EndCreateTBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("CreateTBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInitTBP(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = tbp;
                System.IAsyncResult _result = base.BeginInvoke("InitTBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.JournalRecord EndInitTBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.JournalRecord _result = ((MainSL.MainSVC.JournalRecord)(base.EndInvoke("InitTBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInitOBP(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = tbp;
                System.IAsyncResult _result = base.BeginInvoke("InitOBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.JournalRecord EndInitOBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.JournalRecord _result = ((MainSL.MainSVC.JournalRecord)(base.EndInvoke("InitOBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInitComment(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = tbp;
                System.IAsyncResult _result = base.BeginInvoke("InitComment", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.TBPComment EndInitComment(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.TBPComment _result = ((MainSL.MainSVC.TBPComment)(base.EndInvoke("InitComment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetHistory(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = tbp;
                System.IAsyncResult _result = base.BeginInvoke("getHistory", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPHistoryRecord> EndgetHistory(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPHistoryRecord> _result = ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPHistoryRecord>)(base.EndInvoke("getHistory", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateBP(MainSL.MainSVC.JournalRecord journal, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = journal;
                System.IAsyncResult _result = base.BeginInvoke("CreateBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EndCreateBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("CreateBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFinishBP(MainSL.MainSVC.JournalRecord journal, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = journal;
                System.IAsyncResult _result = base.BeginInvoke("FinishBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EndFinishBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("FinishBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateCommentTBP(MainSL.MainSVC.TBPComment comment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = comment;
                System.IAsyncResult _result = base.BeginInvoke("CreateCommentTBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EndCreateCommentTBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("CreateCommentTBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFinishCommentTBP(MainSL.MainSVC.TBPComment comment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = comment;
                System.IAsyncResult _result = base.BeginInvoke("FinishCommentTBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EndFinishCommentTBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("FinishCommentTBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCommentsList(MainSL.MainSVC.CommentAnswer Filter, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Filter;
                System.IAsyncResult _result = base.BeginInvoke("GetCommentsList", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.CommentAnswer EndGetCommentsList(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.CommentAnswer _result = ((MainSL.MainSVC.CommentAnswer)(base.EndInvoke("GetCommentsList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetOperationsInfo(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getOperationsInfo", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EndgetOperationsInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("getOperationsInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetAllUsers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getAllUsers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.User> EndgetAllUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.User> _result = ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.User>)(base.EndInvoke("getAllUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegineditUser(MainSL.MainSVC.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("editUser", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EndeditUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("editUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegindeleteUser(MainSL.MainSVC.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("deleteUser", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EnddeleteUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("deleteUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginaddFile(string fileInfo, byte[] data, System.DateTime dateLoad, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = fileInfo;
                _args[1] = data;
                _args[2] = dateLoad;
                System.IAsyncResult _result = base.BeginInvoke("addFile", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EndaddFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("addFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginremoveTBP(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = tbp;
                System.IAsyncResult _result = base.BeginInvoke("removeTBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EndremoveTBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("removeTBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetDataRecord(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("getDataRecord", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.DataRecord EndgetDataRecord(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.DataRecord _result = ((MainSL.MainSVC.DataRecord)(base.EndInvoke("getDataRecord", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginupdateDataRecord(MainSL.MainSVC.DataRecord rec, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = rec;
                System.IAsyncResult _result = base.BeginInvoke("updateDataRecord", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EndupdateDataRecord(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("updateDataRecord", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogInfo(string message, System.DateTime date, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = message;
                _args[1] = date;
                System.IAsyncResult _result = base.BeginInvoke("LogInfo", _args, callback, asyncState);
                return _result;
            }
            
            public void EndLogInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("LogInfo", _args, result);
            }
        }
    }
}
