//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34209
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace MainSL.MainSVC {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal.Models")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool CanDoOperField;
        
        private bool CanEditTBPField;
        
        private string LoginField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanDoOper {
            get {
                return this.CanDoOperField;
            }
            set {
                if ((this.CanDoOperField.Equals(value) != true)) {
                    this.CanDoOperField = value;
                    this.RaisePropertyChanged("CanDoOper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEditTBP {
            get {
                return this.CanEditTBPField;
            }
            set {
                if ((this.CanEditTBPField.Equals(value) != true)) {
                    this.CanEditTBPField = value;
                    this.RaisePropertyChanged("CanEditTBP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Folder", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal.Models")]
    public partial class Folder : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBPInfo", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal.Models")]
    public partial class TBPInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool EditingTBPField;
        
        private int FolderIDField;
        
        private string IDPDFDataField;
        
        private string IDWordDataField;
        
        private string NameField;
        
        private string NumberField;
        
        private byte[] PDFDataField;
        
        private bool UpdatedPDFField;
        
        private bool UpdatedWordField;
        
        private byte[] WordDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EditingTBP {
            get {
                return this.EditingTBPField;
            }
            set {
                if ((this.EditingTBPField.Equals(value) != true)) {
                    this.EditingTBPField = value;
                    this.RaisePropertyChanged("EditingTBP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FolderID {
            get {
                return this.FolderIDField;
            }
            set {
                if ((this.FolderIDField.Equals(value) != true)) {
                    this.FolderIDField = value;
                    this.RaisePropertyChanged("FolderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDPDFData {
            get {
                return this.IDPDFDataField;
            }
            set {
                if ((object.ReferenceEquals(this.IDPDFDataField, value) != true)) {
                    this.IDPDFDataField = value;
                    this.RaisePropertyChanged("IDPDFData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDWordData {
            get {
                return this.IDWordDataField;
            }
            set {
                if ((object.ReferenceEquals(this.IDWordDataField, value) != true)) {
                    this.IDWordDataField = value;
                    this.RaisePropertyChanged("IDWordData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PDFData {
            get {
                return this.PDFDataField;
            }
            set {
                if ((object.ReferenceEquals(this.PDFDataField, value) != true)) {
                    this.PDFDataField = value;
                    this.RaisePropertyChanged("PDFData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdatedPDF {
            get {
                return this.UpdatedPDFField;
            }
            set {
                if ((this.UpdatedPDFField.Equals(value) != true)) {
                    this.UpdatedPDFField = value;
                    this.RaisePropertyChanged("UpdatedPDF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdatedWord {
            get {
                return this.UpdatedWordField;
            }
            set {
                if ((this.UpdatedWordField.Equals(value) != true)) {
                    this.UpdatedWordField = value;
                    this.RaisePropertyChanged("UpdatedWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] WordData {
            get {
                return this.WordDataField;
            }
            set {
                if ((object.ReferenceEquals(this.WordDataField, value) != true)) {
                    this.WordDataField = value;
                    this.RaisePropertyChanged("WordData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JournalRecord", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal.Models")]
    public partial class JournalRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthorField;
        
        private string CommentField;
        
        private System.DateTime DateCreateField;
        
        private System.DateTime DateEndField;
        
        private System.DateTime DateStartField;
        
        private double DoubleNumberField;
        
        private string IDWordDataField;
        
        private string NumberField;
        
        private string TBPNumberField;
        
        private string TaskField;
        
        private byte[] WordDataField;
        
        private bool isInitField;
        
        private bool isOBPField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreate {
            get {
                return this.DateCreateField;
            }
            set {
                if ((this.DateCreateField.Equals(value) != true)) {
                    this.DateCreateField = value;
                    this.RaisePropertyChanged("DateCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateEnd {
            get {
                return this.DateEndField;
            }
            set {
                if ((this.DateEndField.Equals(value) != true)) {
                    this.DateEndField = value;
                    this.RaisePropertyChanged("DateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateStart {
            get {
                return this.DateStartField;
            }
            set {
                if ((this.DateStartField.Equals(value) != true)) {
                    this.DateStartField = value;
                    this.RaisePropertyChanged("DateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DoubleNumber {
            get {
                return this.DoubleNumberField;
            }
            set {
                if ((this.DoubleNumberField.Equals(value) != true)) {
                    this.DoubleNumberField = value;
                    this.RaisePropertyChanged("DoubleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDWordData {
            get {
                return this.IDWordDataField;
            }
            set {
                if ((object.ReferenceEquals(this.IDWordDataField, value) != true)) {
                    this.IDWordDataField = value;
                    this.RaisePropertyChanged("IDWordData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TBPNumber {
            get {
                return this.TBPNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPNumberField, value) != true)) {
                    this.TBPNumberField = value;
                    this.RaisePropertyChanged("TBPNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Task {
            get {
                return this.TaskField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskField, value) != true)) {
                    this.TaskField = value;
                    this.RaisePropertyChanged("Task");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] WordData {
            get {
                return this.WordDataField;
            }
            set {
                if ((object.ReferenceEquals(this.WordDataField, value) != true)) {
                    this.WordDataField = value;
                    this.RaisePropertyChanged("WordData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isInit {
            get {
                return this.isInitField;
            }
            set {
                if ((this.isInitField.Equals(value) != true)) {
                    this.isInitField = value;
                    this.RaisePropertyChanged("isInit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isOBP {
            get {
                return this.isOBPField;
            }
            set {
                if ((this.isOBPField.Equals(value) != true)) {
                    this.isOBPField = value;
                    this.RaisePropertyChanged("isOBP");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReturnMessage", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal")]
    public partial class ReturnMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MessageField;
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBPComment", Namespace="http://schemas.datacontract.org/2004/07/BlankJournal.Models")]
    public partial class TBPComment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthorField;
        
        private string CommentPerformField;
        
        private string CommentTextField;
        
        private byte[] DataField;
        
        private string DataIDField;
        
        private System.DateTime DateCreateField;
        
        private System.DateTime DatePerformField;
        
        private bool FinishedField;
        
        private string IDField;
        
        private string PerformerField;
        
        private string TBPNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentPerform {
            get {
                return this.CommentPerformField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentPerformField, value) != true)) {
                    this.CommentPerformField = value;
                    this.RaisePropertyChanged("CommentPerform");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataID {
            get {
                return this.DataIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DataIDField, value) != true)) {
                    this.DataIDField = value;
                    this.RaisePropertyChanged("DataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreate {
            get {
                return this.DateCreateField;
            }
            set {
                if ((this.DateCreateField.Equals(value) != true)) {
                    this.DateCreateField = value;
                    this.RaisePropertyChanged("DateCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DatePerform {
            get {
                return this.DatePerformField;
            }
            set {
                if ((this.DatePerformField.Equals(value) != true)) {
                    this.DatePerformField = value;
                    this.RaisePropertyChanged("DatePerform");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Finished {
            get {
                return this.FinishedField;
            }
            set {
                if ((this.FinishedField.Equals(value) != true)) {
                    this.FinishedField = value;
                    this.RaisePropertyChanged("Finished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Performer {
            get {
                return this.PerformerField;
            }
            set {
                if ((object.ReferenceEquals(this.PerformerField, value) != true)) {
                    this.PerformerField = value;
                    this.RaisePropertyChanged("Performer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TBPNumber {
            get {
                return this.TBPNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TBPNumberField, value) != true)) {
                    this.TBPNumberField = value;
                    this.RaisePropertyChanged("TBPNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="MainSVC.MainService")]
    public interface MainService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/DoWork", ReplyAction="urn:MainService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/GetUser", ReplyAction="urn:MainService/GetUserResponse")]
        System.IAsyncResult BeginGetUser(System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.User EndGetUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/GetAllFolders", ReplyAction="urn:MainService/GetAllFoldersResponse")]
        System.IAsyncResult BeginGetAllFolders(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder> EndGetAllFolders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/GetTBPBlanksByFolder", ReplyAction="urn:MainService/GetTBPBlanksByFolderResponse")]
        System.IAsyncResult BeginGetTBPBlanksByFolder(int folderID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo> EndGetTBPBlanksByFolder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/GetJournalBP", ReplyAction="urn:MainService/GetJournalBPResponse")]
        System.IAsyncResult BeginGetJournalBP(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.JournalRecord> EndGetJournalBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/CreateTBP", ReplyAction="urn:MainService/CreateTBPResponse")]
        System.IAsyncResult BeginCreateTBP(MainSL.MainSVC.TBPInfo newBlank, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EndCreateTBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/InitTBP", ReplyAction="urn:MainService/InitTBPResponse")]
        System.IAsyncResult BeginInitTBP(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.JournalRecord EndInitTBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/InitOBP", ReplyAction="urn:MainService/InitOBPResponse")]
        System.IAsyncResult BeginInitOBP(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.JournalRecord EndInitOBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/CreateBP", ReplyAction="urn:MainService/CreateBPResponse")]
        System.IAsyncResult BeginCreateBP(MainSL.MainSVC.JournalRecord journal, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EndCreateBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/FinishBP", ReplyAction="urn:MainService/FinishBPResponse")]
        System.IAsyncResult BeginFinishBP(MainSL.MainSVC.JournalRecord journal, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EndFinishBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/CreateCommentTBP", ReplyAction="urn:MainService/CreateCommentTBPResponse")]
        System.IAsyncResult BeginCreateCommentTBP(MainSL.MainSVC.TBPComment comment, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EndCreateCommentTBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/FinishCommentTBP", ReplyAction="urn:MainService/FinishCommentTBPResponse")]
        System.IAsyncResult BeginFinishCommentTBP(MainSL.MainSVC.TBPComment comment, System.AsyncCallback callback, object asyncState);
        
        MainSL.MainSVC.ReturnMessage EndFinishCommentTBP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MainService/GetCommentsList", ReplyAction="urn:MainService/GetCommentsListResponse")]
        System.IAsyncResult BeginGetCommentsList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPComment> EndGetCommentsList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MainServiceChannel : MainSL.MainSVC.MainService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTBPBlanksByFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTBPBlanksByFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJournalBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJournalBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.JournalRecord> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.JournalRecord>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateTBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateTBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InitTBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InitTBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.JournalRecord Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.JournalRecord)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InitOBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InitOBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.JournalRecord Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.JournalRecord)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FinishBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FinishBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateCommentTBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateCommentTBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FinishCommentTBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FinishCommentTBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MainSL.MainSVC.ReturnMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MainSL.MainSVC.ReturnMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCommentsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCommentsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPComment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPComment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainServiceClient : System.ServiceModel.ClientBase<MainSL.MainSVC.MainService>, MainSL.MainSVC.MainService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserDelegate;
        
        private EndOperationDelegate onEndGetUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllFoldersDelegate;
        
        private EndOperationDelegate onEndGetAllFoldersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllFoldersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTBPBlanksByFolderDelegate;
        
        private EndOperationDelegate onEndGetTBPBlanksByFolderDelegate;
        
        private System.Threading.SendOrPostCallback onGetTBPBlanksByFolderCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJournalBPDelegate;
        
        private EndOperationDelegate onEndGetJournalBPDelegate;
        
        private System.Threading.SendOrPostCallback onGetJournalBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateTBPDelegate;
        
        private EndOperationDelegate onEndCreateTBPDelegate;
        
        private System.Threading.SendOrPostCallback onCreateTBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginInitTBPDelegate;
        
        private EndOperationDelegate onEndInitTBPDelegate;
        
        private System.Threading.SendOrPostCallback onInitTBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginInitOBPDelegate;
        
        private EndOperationDelegate onEndInitOBPDelegate;
        
        private System.Threading.SendOrPostCallback onInitOBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateBPDelegate;
        
        private EndOperationDelegate onEndCreateBPDelegate;
        
        private System.Threading.SendOrPostCallback onCreateBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginFinishBPDelegate;
        
        private EndOperationDelegate onEndFinishBPDelegate;
        
        private System.Threading.SendOrPostCallback onFinishBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateCommentTBPDelegate;
        
        private EndOperationDelegate onEndCreateCommentTBPDelegate;
        
        private System.Threading.SendOrPostCallback onCreateCommentTBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginFinishCommentTBPDelegate;
        
        private EndOperationDelegate onEndFinishCommentTBPDelegate;
        
        private System.Threading.SendOrPostCallback onFinishCommentTBPCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCommentsListDelegate;
        
        private EndOperationDelegate onEndGetCommentsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetCommentsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MainServiceClient() {
        }
        
        public MainServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Не удалось установить CookieContainer. Убедитесь, что привязка содержит HttpCooki" +
                            "eContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<GetUserCompletedEventArgs> GetUserCompleted;
        
        public event System.EventHandler<GetAllFoldersCompletedEventArgs> GetAllFoldersCompleted;
        
        public event System.EventHandler<GetTBPBlanksByFolderCompletedEventArgs> GetTBPBlanksByFolderCompleted;
        
        public event System.EventHandler<GetJournalBPCompletedEventArgs> GetJournalBPCompleted;
        
        public event System.EventHandler<CreateTBPCompletedEventArgs> CreateTBPCompleted;
        
        public event System.EventHandler<InitTBPCompletedEventArgs> InitTBPCompleted;
        
        public event System.EventHandler<InitOBPCompletedEventArgs> InitOBPCompleted;
        
        public event System.EventHandler<CreateBPCompletedEventArgs> CreateBPCompleted;
        
        public event System.EventHandler<FinishBPCompletedEventArgs> FinishBPCompleted;
        
        public event System.EventHandler<CreateCommentTBPCompletedEventArgs> CreateCommentTBPCompleted;
        
        public event System.EventHandler<FinishCommentTBPCompletedEventArgs> FinishCommentTBPCompleted;
        
        public event System.EventHandler<GetCommentsListCompletedEventArgs> GetCommentsListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void MainSL.MainSVC.MainService.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MainSL.MainSVC.MainService)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((MainSL.MainSVC.MainService)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginGetUser(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUser(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.User MainSL.MainSVC.MainService.EndGetUser(System.IAsyncResult result) {
            return base.Channel.EndGetUser(result);
        }
        
        private System.IAsyncResult OnBeginGetUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MainSL.MainSVC.MainService)(this)).BeginGetUser(callback, asyncState);
        }
        
        private object[] OnEndGetUser(System.IAsyncResult result) {
            MainSL.MainSVC.User retVal = ((MainSL.MainSVC.MainService)(this)).EndGetUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserCompleted(object state) {
            if ((this.GetUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserAsync() {
            this.GetUserAsync(null);
        }
        
        public void GetUserAsync(object userState) {
            if ((this.onBeginGetUserDelegate == null)) {
                this.onBeginGetUserDelegate = new BeginOperationDelegate(this.OnBeginGetUser);
            }
            if ((this.onEndGetUserDelegate == null)) {
                this.onEndGetUserDelegate = new EndOperationDelegate(this.OnEndGetUser);
            }
            if ((this.onGetUserCompletedDelegate == null)) {
                this.onGetUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserDelegate, null, this.onEndGetUserDelegate, this.onGetUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginGetAllFolders(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllFolders(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder> MainSL.MainSVC.MainService.EndGetAllFolders(System.IAsyncResult result) {
            return base.Channel.EndGetAllFolders(result);
        }
        
        private System.IAsyncResult OnBeginGetAllFolders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MainSL.MainSVC.MainService)(this)).BeginGetAllFolders(callback, asyncState);
        }
        
        private object[] OnEndGetAllFolders(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder> retVal = ((MainSL.MainSVC.MainService)(this)).EndGetAllFolders(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllFoldersCompleted(object state) {
            if ((this.GetAllFoldersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllFoldersCompleted(this, new GetAllFoldersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllFoldersAsync() {
            this.GetAllFoldersAsync(null);
        }
        
        public void GetAllFoldersAsync(object userState) {
            if ((this.onBeginGetAllFoldersDelegate == null)) {
                this.onBeginGetAllFoldersDelegate = new BeginOperationDelegate(this.OnBeginGetAllFolders);
            }
            if ((this.onEndGetAllFoldersDelegate == null)) {
                this.onEndGetAllFoldersDelegate = new EndOperationDelegate(this.OnEndGetAllFolders);
            }
            if ((this.onGetAllFoldersCompletedDelegate == null)) {
                this.onGetAllFoldersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllFoldersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllFoldersDelegate, null, this.onEndGetAllFoldersDelegate, this.onGetAllFoldersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginGetTBPBlanksByFolder(int folderID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTBPBlanksByFolder(folderID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo> MainSL.MainSVC.MainService.EndGetTBPBlanksByFolder(System.IAsyncResult result) {
            return base.Channel.EndGetTBPBlanksByFolder(result);
        }
        
        private System.IAsyncResult OnBeginGetTBPBlanksByFolder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int folderID = ((int)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginGetTBPBlanksByFolder(folderID, callback, asyncState);
        }
        
        private object[] OnEndGetTBPBlanksByFolder(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo> retVal = ((MainSL.MainSVC.MainService)(this)).EndGetTBPBlanksByFolder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTBPBlanksByFolderCompleted(object state) {
            if ((this.GetTBPBlanksByFolderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTBPBlanksByFolderCompleted(this, new GetTBPBlanksByFolderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTBPBlanksByFolderAsync(int folderID) {
            this.GetTBPBlanksByFolderAsync(folderID, null);
        }
        
        public void GetTBPBlanksByFolderAsync(int folderID, object userState) {
            if ((this.onBeginGetTBPBlanksByFolderDelegate == null)) {
                this.onBeginGetTBPBlanksByFolderDelegate = new BeginOperationDelegate(this.OnBeginGetTBPBlanksByFolder);
            }
            if ((this.onEndGetTBPBlanksByFolderDelegate == null)) {
                this.onEndGetTBPBlanksByFolderDelegate = new EndOperationDelegate(this.OnEndGetTBPBlanksByFolder);
            }
            if ((this.onGetTBPBlanksByFolderCompletedDelegate == null)) {
                this.onGetTBPBlanksByFolderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTBPBlanksByFolderCompleted);
            }
            base.InvokeAsync(this.onBeginGetTBPBlanksByFolderDelegate, new object[] {
                        folderID}, this.onEndGetTBPBlanksByFolderDelegate, this.onGetTBPBlanksByFolderCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginGetJournalBP(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJournalBP(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.JournalRecord> MainSL.MainSVC.MainService.EndGetJournalBP(System.IAsyncResult result) {
            return base.Channel.EndGetJournalBP(result);
        }
        
        private System.IAsyncResult OnBeginGetJournalBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MainSL.MainSVC.MainService)(this)).BeginGetJournalBP(callback, asyncState);
        }
        
        private object[] OnEndGetJournalBP(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.JournalRecord> retVal = ((MainSL.MainSVC.MainService)(this)).EndGetJournalBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJournalBPCompleted(object state) {
            if ((this.GetJournalBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJournalBPCompleted(this, new GetJournalBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJournalBPAsync() {
            this.GetJournalBPAsync(null);
        }
        
        public void GetJournalBPAsync(object userState) {
            if ((this.onBeginGetJournalBPDelegate == null)) {
                this.onBeginGetJournalBPDelegate = new BeginOperationDelegate(this.OnBeginGetJournalBP);
            }
            if ((this.onEndGetJournalBPDelegate == null)) {
                this.onEndGetJournalBPDelegate = new EndOperationDelegate(this.OnEndGetJournalBP);
            }
            if ((this.onGetJournalBPCompletedDelegate == null)) {
                this.onGetJournalBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJournalBPCompleted);
            }
            base.InvokeAsync(this.onBeginGetJournalBPDelegate, null, this.onEndGetJournalBPDelegate, this.onGetJournalBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginCreateTBP(MainSL.MainSVC.TBPInfo newBlank, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateTBP(newBlank, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EndCreateTBP(System.IAsyncResult result) {
            return base.Channel.EndCreateTBP(result);
        }
        
        private System.IAsyncResult OnBeginCreateTBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.TBPInfo newBlank = ((MainSL.MainSVC.TBPInfo)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginCreateTBP(newBlank, callback, asyncState);
        }
        
        private object[] OnEndCreateTBP(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EndCreateTBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateTBPCompleted(object state) {
            if ((this.CreateTBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateTBPCompleted(this, new CreateTBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateTBPAsync(MainSL.MainSVC.TBPInfo newBlank) {
            this.CreateTBPAsync(newBlank, null);
        }
        
        public void CreateTBPAsync(MainSL.MainSVC.TBPInfo newBlank, object userState) {
            if ((this.onBeginCreateTBPDelegate == null)) {
                this.onBeginCreateTBPDelegate = new BeginOperationDelegate(this.OnBeginCreateTBP);
            }
            if ((this.onEndCreateTBPDelegate == null)) {
                this.onEndCreateTBPDelegate = new EndOperationDelegate(this.OnEndCreateTBP);
            }
            if ((this.onCreateTBPCompletedDelegate == null)) {
                this.onCreateTBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateTBPCompleted);
            }
            base.InvokeAsync(this.onBeginCreateTBPDelegate, new object[] {
                        newBlank}, this.onEndCreateTBPDelegate, this.onCreateTBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginInitTBP(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInitTBP(tbp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.JournalRecord MainSL.MainSVC.MainService.EndInitTBP(System.IAsyncResult result) {
            return base.Channel.EndInitTBP(result);
        }
        
        private System.IAsyncResult OnBeginInitTBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.TBPInfo tbp = ((MainSL.MainSVC.TBPInfo)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginInitTBP(tbp, callback, asyncState);
        }
        
        private object[] OnEndInitTBP(System.IAsyncResult result) {
            MainSL.MainSVC.JournalRecord retVal = ((MainSL.MainSVC.MainService)(this)).EndInitTBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInitTBPCompleted(object state) {
            if ((this.InitTBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InitTBPCompleted(this, new InitTBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InitTBPAsync(MainSL.MainSVC.TBPInfo tbp) {
            this.InitTBPAsync(tbp, null);
        }
        
        public void InitTBPAsync(MainSL.MainSVC.TBPInfo tbp, object userState) {
            if ((this.onBeginInitTBPDelegate == null)) {
                this.onBeginInitTBPDelegate = new BeginOperationDelegate(this.OnBeginInitTBP);
            }
            if ((this.onEndInitTBPDelegate == null)) {
                this.onEndInitTBPDelegate = new EndOperationDelegate(this.OnEndInitTBP);
            }
            if ((this.onInitTBPCompletedDelegate == null)) {
                this.onInitTBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInitTBPCompleted);
            }
            base.InvokeAsync(this.onBeginInitTBPDelegate, new object[] {
                        tbp}, this.onEndInitTBPDelegate, this.onInitTBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginInitOBP(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInitOBP(tbp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.JournalRecord MainSL.MainSVC.MainService.EndInitOBP(System.IAsyncResult result) {
            return base.Channel.EndInitOBP(result);
        }
        
        private System.IAsyncResult OnBeginInitOBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.TBPInfo tbp = ((MainSL.MainSVC.TBPInfo)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginInitOBP(tbp, callback, asyncState);
        }
        
        private object[] OnEndInitOBP(System.IAsyncResult result) {
            MainSL.MainSVC.JournalRecord retVal = ((MainSL.MainSVC.MainService)(this)).EndInitOBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInitOBPCompleted(object state) {
            if ((this.InitOBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InitOBPCompleted(this, new InitOBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InitOBPAsync(MainSL.MainSVC.TBPInfo tbp) {
            this.InitOBPAsync(tbp, null);
        }
        
        public void InitOBPAsync(MainSL.MainSVC.TBPInfo tbp, object userState) {
            if ((this.onBeginInitOBPDelegate == null)) {
                this.onBeginInitOBPDelegate = new BeginOperationDelegate(this.OnBeginInitOBP);
            }
            if ((this.onEndInitOBPDelegate == null)) {
                this.onEndInitOBPDelegate = new EndOperationDelegate(this.OnEndInitOBP);
            }
            if ((this.onInitOBPCompletedDelegate == null)) {
                this.onInitOBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInitOBPCompleted);
            }
            base.InvokeAsync(this.onBeginInitOBPDelegate, new object[] {
                        tbp}, this.onEndInitOBPDelegate, this.onInitOBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginCreateBP(MainSL.MainSVC.JournalRecord journal, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateBP(journal, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EndCreateBP(System.IAsyncResult result) {
            return base.Channel.EndCreateBP(result);
        }
        
        private System.IAsyncResult OnBeginCreateBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.JournalRecord journal = ((MainSL.MainSVC.JournalRecord)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginCreateBP(journal, callback, asyncState);
        }
        
        private object[] OnEndCreateBP(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EndCreateBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateBPCompleted(object state) {
            if ((this.CreateBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateBPCompleted(this, new CreateBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateBPAsync(MainSL.MainSVC.JournalRecord journal) {
            this.CreateBPAsync(journal, null);
        }
        
        public void CreateBPAsync(MainSL.MainSVC.JournalRecord journal, object userState) {
            if ((this.onBeginCreateBPDelegate == null)) {
                this.onBeginCreateBPDelegate = new BeginOperationDelegate(this.OnBeginCreateBP);
            }
            if ((this.onEndCreateBPDelegate == null)) {
                this.onEndCreateBPDelegate = new EndOperationDelegate(this.OnEndCreateBP);
            }
            if ((this.onCreateBPCompletedDelegate == null)) {
                this.onCreateBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateBPCompleted);
            }
            base.InvokeAsync(this.onBeginCreateBPDelegate, new object[] {
                        journal}, this.onEndCreateBPDelegate, this.onCreateBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginFinishBP(MainSL.MainSVC.JournalRecord journal, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFinishBP(journal, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EndFinishBP(System.IAsyncResult result) {
            return base.Channel.EndFinishBP(result);
        }
        
        private System.IAsyncResult OnBeginFinishBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.JournalRecord journal = ((MainSL.MainSVC.JournalRecord)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginFinishBP(journal, callback, asyncState);
        }
        
        private object[] OnEndFinishBP(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EndFinishBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFinishBPCompleted(object state) {
            if ((this.FinishBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FinishBPCompleted(this, new FinishBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FinishBPAsync(MainSL.MainSVC.JournalRecord journal) {
            this.FinishBPAsync(journal, null);
        }
        
        public void FinishBPAsync(MainSL.MainSVC.JournalRecord journal, object userState) {
            if ((this.onBeginFinishBPDelegate == null)) {
                this.onBeginFinishBPDelegate = new BeginOperationDelegate(this.OnBeginFinishBP);
            }
            if ((this.onEndFinishBPDelegate == null)) {
                this.onEndFinishBPDelegate = new EndOperationDelegate(this.OnEndFinishBP);
            }
            if ((this.onFinishBPCompletedDelegate == null)) {
                this.onFinishBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFinishBPCompleted);
            }
            base.InvokeAsync(this.onBeginFinishBPDelegate, new object[] {
                        journal}, this.onEndFinishBPDelegate, this.onFinishBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginCreateCommentTBP(MainSL.MainSVC.TBPComment comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateCommentTBP(comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EndCreateCommentTBP(System.IAsyncResult result) {
            return base.Channel.EndCreateCommentTBP(result);
        }
        
        private System.IAsyncResult OnBeginCreateCommentTBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.TBPComment comment = ((MainSL.MainSVC.TBPComment)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginCreateCommentTBP(comment, callback, asyncState);
        }
        
        private object[] OnEndCreateCommentTBP(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EndCreateCommentTBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateCommentTBPCompleted(object state) {
            if ((this.CreateCommentTBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateCommentTBPCompleted(this, new CreateCommentTBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateCommentTBPAsync(MainSL.MainSVC.TBPComment comment) {
            this.CreateCommentTBPAsync(comment, null);
        }
        
        public void CreateCommentTBPAsync(MainSL.MainSVC.TBPComment comment, object userState) {
            if ((this.onBeginCreateCommentTBPDelegate == null)) {
                this.onBeginCreateCommentTBPDelegate = new BeginOperationDelegate(this.OnBeginCreateCommentTBP);
            }
            if ((this.onEndCreateCommentTBPDelegate == null)) {
                this.onEndCreateCommentTBPDelegate = new EndOperationDelegate(this.OnEndCreateCommentTBP);
            }
            if ((this.onCreateCommentTBPCompletedDelegate == null)) {
                this.onCreateCommentTBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateCommentTBPCompleted);
            }
            base.InvokeAsync(this.onBeginCreateCommentTBPDelegate, new object[] {
                        comment}, this.onEndCreateCommentTBPDelegate, this.onCreateCommentTBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginFinishCommentTBP(MainSL.MainSVC.TBPComment comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFinishCommentTBP(comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MainSL.MainSVC.ReturnMessage MainSL.MainSVC.MainService.EndFinishCommentTBP(System.IAsyncResult result) {
            return base.Channel.EndFinishCommentTBP(result);
        }
        
        private System.IAsyncResult OnBeginFinishCommentTBP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MainSL.MainSVC.TBPComment comment = ((MainSL.MainSVC.TBPComment)(inValues[0]));
            return ((MainSL.MainSVC.MainService)(this)).BeginFinishCommentTBP(comment, callback, asyncState);
        }
        
        private object[] OnEndFinishCommentTBP(System.IAsyncResult result) {
            MainSL.MainSVC.ReturnMessage retVal = ((MainSL.MainSVC.MainService)(this)).EndFinishCommentTBP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFinishCommentTBPCompleted(object state) {
            if ((this.FinishCommentTBPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FinishCommentTBPCompleted(this, new FinishCommentTBPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FinishCommentTBPAsync(MainSL.MainSVC.TBPComment comment) {
            this.FinishCommentTBPAsync(comment, null);
        }
        
        public void FinishCommentTBPAsync(MainSL.MainSVC.TBPComment comment, object userState) {
            if ((this.onBeginFinishCommentTBPDelegate == null)) {
                this.onBeginFinishCommentTBPDelegate = new BeginOperationDelegate(this.OnBeginFinishCommentTBP);
            }
            if ((this.onEndFinishCommentTBPDelegate == null)) {
                this.onEndFinishCommentTBPDelegate = new EndOperationDelegate(this.OnEndFinishCommentTBP);
            }
            if ((this.onFinishCommentTBPCompletedDelegate == null)) {
                this.onFinishCommentTBPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFinishCommentTBPCompleted);
            }
            base.InvokeAsync(this.onBeginFinishCommentTBPDelegate, new object[] {
                        comment}, this.onEndFinishCommentTBPDelegate, this.onFinishCommentTBPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MainSL.MainSVC.MainService.BeginGetCommentsList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCommentsList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPComment> MainSL.MainSVC.MainService.EndGetCommentsList(System.IAsyncResult result) {
            return base.Channel.EndGetCommentsList(result);
        }
        
        private System.IAsyncResult OnBeginGetCommentsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MainSL.MainSVC.MainService)(this)).BeginGetCommentsList(callback, asyncState);
        }
        
        private object[] OnEndGetCommentsList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPComment> retVal = ((MainSL.MainSVC.MainService)(this)).EndGetCommentsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCommentsListCompleted(object state) {
            if ((this.GetCommentsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCommentsListCompleted(this, new GetCommentsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCommentsListAsync() {
            this.GetCommentsListAsync(null);
        }
        
        public void GetCommentsListAsync(object userState) {
            if ((this.onBeginGetCommentsListDelegate == null)) {
                this.onBeginGetCommentsListDelegate = new BeginOperationDelegate(this.OnBeginGetCommentsList);
            }
            if ((this.onEndGetCommentsListDelegate == null)) {
                this.onEndGetCommentsListDelegate = new EndOperationDelegate(this.OnEndGetCommentsList);
            }
            if ((this.onGetCommentsListCompletedDelegate == null)) {
                this.onGetCommentsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCommentsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetCommentsListDelegate, null, this.onEndGetCommentsListDelegate, this.onGetCommentsListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MainSL.MainSVC.MainService CreateChannel() {
            return new MainServiceClientChannel(this);
        }
        
        private class MainServiceClientChannel : ChannelBase<MainSL.MainSVC.MainService>, MainSL.MainSVC.MainService {
            
            public MainServiceClientChannel(System.ServiceModel.ClientBase<MainSL.MainSVC.MainService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginGetUser(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetUser", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.User EndGetUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.User _result = ((MainSL.MainSVC.User)(base.EndInvoke("GetUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllFolders(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllFolders", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder> EndGetAllFolders(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder> _result = ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.Folder>)(base.EndInvoke("GetAllFolders", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTBPBlanksByFolder(int folderID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = folderID;
                System.IAsyncResult _result = base.BeginInvoke("GetTBPBlanksByFolder", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo> EndGetTBPBlanksByFolder(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPInfo>)(base.EndInvoke("GetTBPBlanksByFolder", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetJournalBP(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetJournalBP", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.JournalRecord> EndGetJournalBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.JournalRecord> _result = ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.JournalRecord>)(base.EndInvoke("GetJournalBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateTBP(MainSL.MainSVC.TBPInfo newBlank, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = newBlank;
                System.IAsyncResult _result = base.BeginInvoke("CreateTBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EndCreateTBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("CreateTBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInitTBP(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = tbp;
                System.IAsyncResult _result = base.BeginInvoke("InitTBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.JournalRecord EndInitTBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.JournalRecord _result = ((MainSL.MainSVC.JournalRecord)(base.EndInvoke("InitTBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInitOBP(MainSL.MainSVC.TBPInfo tbp, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = tbp;
                System.IAsyncResult _result = base.BeginInvoke("InitOBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.JournalRecord EndInitOBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.JournalRecord _result = ((MainSL.MainSVC.JournalRecord)(base.EndInvoke("InitOBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateBP(MainSL.MainSVC.JournalRecord journal, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = journal;
                System.IAsyncResult _result = base.BeginInvoke("CreateBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EndCreateBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("CreateBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFinishBP(MainSL.MainSVC.JournalRecord journal, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = journal;
                System.IAsyncResult _result = base.BeginInvoke("FinishBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EndFinishBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("FinishBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateCommentTBP(MainSL.MainSVC.TBPComment comment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = comment;
                System.IAsyncResult _result = base.BeginInvoke("CreateCommentTBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EndCreateCommentTBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("CreateCommentTBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFinishCommentTBP(MainSL.MainSVC.TBPComment comment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = comment;
                System.IAsyncResult _result = base.BeginInvoke("FinishCommentTBP", _args, callback, asyncState);
                return _result;
            }
            
            public MainSL.MainSVC.ReturnMessage EndFinishCommentTBP(System.IAsyncResult result) {
                object[] _args = new object[0];
                MainSL.MainSVC.ReturnMessage _result = ((MainSL.MainSVC.ReturnMessage)(base.EndInvoke("FinishCommentTBP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCommentsList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCommentsList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPComment> EndGetCommentsList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPComment> _result = ((System.Collections.ObjectModel.ObservableCollection<MainSL.MainSVC.TBPComment>)(base.EndInvoke("GetCommentsList", _args, result)));
                return _result;
            }
        }
    }
}
